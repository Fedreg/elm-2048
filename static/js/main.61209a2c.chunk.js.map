{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","A2","A3","A4","A5","A6","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_JsArray_unsafeGet","index","array","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","_List_toArray","xs","push","_List_map2","ys","_List_sortWith","sort","ord","elm$core$Basics$EQ","elm$core$Basics$LT","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","key","elm$core$Dict$toList","_Utils_equal","_Utils_cmp","_Utils_compare","n","elm$core$Basics$GT","_Utils_Tuple0","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","root","curr","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_Scheduler_succeed","value","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","g","h","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_String_join","sep","strs","join","_String_slice","start","end","str","slice","_String_contains","sub","indexOf","_String_startsWith","_String_indexes","subLen","is","_Json_decodePrim","decoder","_Json_decodeInt","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_decodeBool","_Json_decodeValue","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_mapMany","decoders","_Json_andThen","_Json_map1","d1","_Json_map5","d2","d3","d4","d5","_Json_map8","F9","d6","d7","d8","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_addField","object","_Process_sleep","time","id","setTimeout","clearTimeout","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_divertHrefToApp","_Platform_outgoingPortMap","tagger","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNode","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_lazy","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","w","stopPropagation","aj","currentEventNode","ah","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_document","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aW","a3","a1","initialModel","divertHrefToApp","U","view","a4","title","bodyNode","body","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","doc","nextNode","aN","_VirtualDom_diff","a2","cancelAnimationFrame","requestAnimationFrame","_Browser_getUrl","elm$url$Url$fromString","location","href","millisToPosix","_Browser_pushUrl","url","elm$core$Task$perform","elm$core$Basics$never","history","pushState","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$List$cons","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$List$foldl","elm$core$Basics$identity","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Set$empty","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","right","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","_n0","elm$core$Set$insert","elm$core$Set$fromList","author$project$Main$allIndicesSet","elm$core$Basics$add","elm$core$List$foldrHelper","fn","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Elm$JsArray$initializeFromList","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Basics$eq","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Dict$foldl","elm$core$Dict$moveRedLeft","_n4","_n5","_n1","_n2","rlL","rlR","elm$core$Dict$moveRedRight","elm$core$Dict$removeHelpPrepEQGT","F7","targetKey","_n2$2","elm$core$Dict$removeMin","lLeft","elm$core$Dict$removeHelp","_n7","elm$core$Dict$removeHelpEQGT","elm$core$Dict$getMin","elm$core$Dict$remove","elm$core$Dict$diff","t1","t2","elm$core$Set$diff","author$project$Main$emptyLocationIndices","tiles","R","author$project$Main$placedIndicesSet","keyList","elm$core$List$length","author$project$Main$lessThenMax","author$project$Main$AddTile","author$project$Main$tileFromLocationIndex","indx","P","I","_","elm$core$Array$bitMask","elm$core$Elm$JsArray$unsafeGet","elm$core$Array$getHelp","elm$core$Array$get","startShift","tail","elm$core$Array$tailIndex","elm$core$Maybe$withDefault","_default","maybe","elm$random$Random$Seed","elm$random$Random$next","incr","elm$random$Random$peel","word","elm$random$Random$float","seed0","seed1","range","n1","elm$random$Random$int","threshhold","seed","seedN","accountForBias","elm$random$Random$map2","genA","genB","_n3","seed2","elm$core$Task$andThen","elm$core$Task$succeed","elm$time$Time$now","Date","now","elm$random$Random$init","elm$random$Random$initialSeed","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fromIndex","leaf","tailLen","elm$core$List$map2","elm$core$String$fromInt","elm$core$String$join","chunks","elm$core$Platform$sendToApp","elm$random$Random$step","elm$random$Random$onEffects","commands","rest","newSeed","elm$random$Random$onSelfMsg","elm$random$Random$map","elm$random$Random$command","elm$random$Random$generate","generator","author$project$Main$changeTiles","elm$core$List$sortWith","author$project$Main$sortTilesByRowsCols","rowIndex","row","col","index2","index1","elm$core$Platform$Cmd$none","author$project$Main$generateNewTile","locationIndices","num","author$project$Main$valueFrom","author$project$Main$tileGenerator","author$project$Main$GameState","score","bestScore","status","nextTileKey","B","D","elm$json$Json$Decode$succeed","elm$json$Json$Decode$string","author$project$Main$statusDecoder","elm$json$Json$Decode$bool","elm$json$Json$Decode$field","elm$json$Json$Decode$int","author$project$Main$gameStateDecoder","F8","locIndex","_new","merged","moved","elm$json$Json$Decode$decodeValue","author$project$Main$defaultGameState","author$project$Main$initialModel","flags","navKey","author$project$Main$decodeGameState","author$project$Main$parseGameState","af","ak","author$project$Main$init","author$project$Main$MoveDown","author$project$Main$MoveLeft","author$project$Main$MoveRight","author$project$Main$MoveUp","author$project$Main$NoOp","elm$json$Json$Decode$map","author$project$Main$keyDecoder","elm$browser$Browser$Events$MySub","elm$browser$Browser$Events$State","subs","pids","ax","aH","elm$browser$Browser$Events$init","elm$browser$Browser$Events$addKey","elm$browser$Browser$Events$Event","ap","elm$core$Platform$sendToSelf","elm$core$Task$map","taskA","elm$core$Task$init","elm$core$Task$map2","taskB","elm$core$Task$sequence","tasks","elm$core$Task$spawnCmd","elm$core$Task$command","toMessage","elm$core$String$slice","elm$core$String$dropLeft","elm$core$String$startsWith","elm$core$String$indexes","elm$core$String$isEmpty","elm$core$String$left","elm$core$String$contains","elm$url$Url$Url","protocol","host","port_","path","query","fragment","aq","aw","ay","aB","aC","elm$url$Url$chompBeforePath","params","total","code0","charCodeAt","code","elm$core$String$toInt","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","elm$url$Url$chompAfterProtocol","elm$browser$Browser$Events$spawn","elm$core$Dict$fromList","assocs","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","rKey","rValue","stepState","lKey","lValue","leftovers","intermediateResult","elm$core$Dict$union","elm$core$Process$kill","elm$browser$Browser$Events$onEffects","stepRight","news","stepLeft","pid","lives","stepBoth","newSubs","livePids","makeNewPids","elm$core$List$maybeCons","mx","elm$core$List$filterMap","messages","converter","exports","onUrlChange","onUrlRequest","elm$browser$Browser$Events$subscription","elm$browser$Browser$Events$onKeyDown","elm$core$Platform$Sub$batch","author$project$Main$notMoved","tile","author$project$Main$notNew","elm$core$Basics$composeR","author$project$Main$addTile","gs","author$project$Main$maybeMoveTile","author$project$Main$mergeTilesHelp","checked","mergeTilesHelp","merge","t3","t4","ts","author$project$Main$mergeTiles","author$project$Main$notMerged","elm$core$List$filter","isGood","author$project$Main$tilesInColumns","direction","colOrder","column","elm$core$List$append","elm$core$List$concat","lists","author$project$Main$tilesInRows","rowOrder","sortedrow","author$project$Main$moveLeft","squashLeft","tilelist","author$project$Main$moveUp","squashUp","author$project$Main$NewTile","elm$core$Basics$always","elm$core$List$any","isOkay","elm$core$Process$sleep","author$project$Main$newTileLaterIfTilesChanged","author$project$Main$cacheData","_Platform_checkPortName","cmdList","currentSubs","subscribe","unsubscribe","splice","elm$json$Json$Encode$string","elm$json$Json$Encode$bool","elm$json$Json$Encode$int","elm$json$Json$Encode$object","pairs","obj","author$project$Main$tileEncoder","elm$json$Json$Encode$list","entries","_Json_addEntry","author$project$Main$saveGameState","statusToStr","author$project$Main$gameStateEncoder","author$project$Main$movePossible","can","move","elm$browser$Browser$Navigation$pushUrl","elm$url$Url$addPort","maybePort","starter","elm$url$Url$addPrefixed","prefix","maybeSegment","author$project$Main$update","newGs","gridFull","any2048Tile","author$project$Main$gameStatus","author$project$Main$updateScoresAndGameStatus","newTiles","squashDown","squashRight","author$project$Main$moveRight","urlRequest","err","reload","elm$browser$Browser$Navigation$load","elm$url$Url$toString","author$project$Main$NewGame","elm$html$Html$button","elm$html$Html$div","elm$html$Html$p","elm$html$Html$strong","elm$html$Html$text","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$class","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","author$project$Main$aboveGame","author$project$Main$divider","author$project$Main$gameExplanation","elm$html$Html$a","elm$html$Html$Attributes$href","test","replace","elm$html$Html$Attributes$target","author$project$Main$gameFooter","elm$html$Html$h1","author$project$Main$KeepGoing","author$project$Main$gameNotes","author$project$Main$gridRow","author$project$Main$gridContainer","author$project$Main$singleTile","author$project$Main$newTileClassStr","author$project$Main$mergedTileClassStr","author$project$Main$tileClassStr","elm$html$Html$Lazy$lazy","author$project$Main$singleKeyedTile","elm$html$Html$Keyed$node","_VirtualDom_noScript","elm$json$Json$Decode$value","Main","aZ","a_","author$project$Main$gameStatusClassStr","author$project$Main$gameStatusMessage","author$project$Main$gameMessage","author$project$Main$listOfTiles","navigator","userAgent","ctrlKey","metaKey","shiftKey","button","target","hasAttribute","next","elm$browser$Browser$External","author$project$Main$main","_Platform_mergeExportsProd","this","isLocalhost","registerValidSW","swUrl","registration","installingWorker","installing","controller","console","error","gameState","JSON","localStorage","app","setItem","URL","process","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.61209a2c.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ai.Q === region.ao.Q)\n\t{\n\t\treturn 'on line ' + region.ai.Q;\n\t}\n\treturn 'on lines ' + region.ai.Q + ' through ' + region.ao.Q;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aW,\n\t\timpl.a3,\n\t\timpl.a1,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tw: func(record.w),\n\t\taj: record.aj,\n\t\tah: record.ah\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.w;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.aj;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.ah) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aW,\n\t\timpl.a3,\n\t\timpl.a1,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a4;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aW,\n\t\timpl.a3,\n\t\timpl.a1,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.U && impl.U(sendToApp)\n\t\t\tvar view = impl.a4;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aN);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.a2) && (_VirtualDom_doc.title = title = doc.a2);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aZ;\n\tvar onUrlRequest = impl.a_;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tU: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aB === next.aB\n\t\t\t\t\t\t\t&& curr.as === next.as\n\t\t\t\t\t\t\t&& curr.ay.a === next.ay.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taW: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aW, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta4: impl.a4,\n\t\ta3: impl.a3,\n\t\ta1: impl.a1\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aU: 'hidden', aO: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aU: 'mozHidden', aO: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aU: 'msHidden', aO: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aU: 'webkitHidden', aO: 'webkitvisibilitychange' }\n\t\t: { aU: 'hidden', aO: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taG: _Browser_getScene(),\n\t\taJ: {\n\t\t\tac: _Browser_window.pageXOffset,\n\t\t\tad: _Browser_window.pageYOffset,\n\t\t\tN: _Browser_doc.documentElement.clientWidth,\n\t\t\tH: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tN: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tH: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taG: {\n\t\t\t\tN: node.scrollWidth,\n\t\t\t\tH: node.scrollHeight\n\t\t\t},\n\t\t\taJ: {\n\t\t\t\tac: node.scrollLeft,\n\t\t\t\tad: node.scrollTop,\n\t\t\t\tN: node.clientWidth,\n\t\t\t\tH: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taG: _Browser_getScene(),\n\t\t\taJ: {\n\t\t\t\tac: x,\n\t\t\t\tad: y,\n\t\t\t\tN: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tH: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taP: {\n\t\t\t\tac: x + rect.left,\n\t\t\t\tad: y + rect.top,\n\t\t\t\tN: rect.width,\n\t\t\t\tH: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Main$LinkClicked = function (a) {\n\treturn {$: 9, a: a};\n};\nvar author$project$Main$UrlChanged = function (a) {\n\treturn {$: 10, a: a};\n};\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;\nvar elm$core$Set$empty = elm$core$Dict$empty;\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A3(elm$core$Dict$insert, key, 0, dict);\n\t});\nvar elm$core$Set$fromList = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$Set$insert, elm$core$Set$empty, list);\n};\nvar author$project$Main$allIndicesSet = elm$core$Set$fromList(\n\tA2(elm$core$List$range, 1, 16));\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$Main$placedIndicesSet = function (tiles) {\n\treturn elm$core$Set$fromList(\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.R;\n\t\t\t},\n\t\t\ttiles));\n};\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.c) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.e);\n\t\t} else {\n\t\t\tvar treeLen = builder.c * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.f) : builder.f;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.c);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.e);\n\t\t}\n\t});\nvar elm$core$Basics$True = 0;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{f: nodeList, c: nodeListSize, e: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar elm$core$Basics$False = 1;\nvar elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.e.d.$ === -1) && (!dict.e.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar lLeft = _n1.d;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n2 = dict.e;\n\t\t\tvar rClr = _n2.a;\n\t\t\tvar rK = _n2.b;\n\t\t\tvar rV = _n2.c;\n\t\t\tvar rLeft = _n2.d;\n\t\t\tvar _n3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _n2.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n4 = dict.d;\n\t\t\tvar lClr = _n4.a;\n\t\t\tvar lK = _n4.b;\n\t\t\tvar lV = _n4.c;\n\t\t\tvar lLeft = _n4.d;\n\t\t\tvar lRight = _n4.e;\n\t\t\tvar _n5 = dict.e;\n\t\t\tvar rClr = _n5.a;\n\t\t\tvar rK = _n5.b;\n\t\t\tvar rV = _n5.c;\n\t\t\tvar rLeft = _n5.d;\n\t\t\tvar rRight = _n5.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.d.d.$ === -1) && (!dict.d.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar _n2 = _n1.d;\n\t\t\tvar _n3 = _n2.a;\n\t\t\tvar llK = _n2.b;\n\t\t\tvar llV = _n2.c;\n\t\t\tvar llLeft = _n2.d;\n\t\t\tvar llRight = _n2.e;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n4 = dict.e;\n\t\t\tvar rClr = _n4.a;\n\t\t\tvar rK = _n4.b;\n\t\t\tvar rV = _n4.c;\n\t\t\tvar rLeft = _n4.d;\n\t\t\tvar rRight = _n4.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n5 = dict.d;\n\t\t\tvar lClr = _n5.a;\n\t\t\tvar lK = _n5.b;\n\t\t\tvar lV = _n5.c;\n\t\t\tvar lLeft = _n5.d;\n\t\t\tvar lRight = _n5.e;\n\t\t\tvar _n6 = dict.e;\n\t\t\tvar rClr = _n6.a;\n\t\t\tvar rK = _n6.b;\n\t\t\tvar rV = _n6.c;\n\t\t\tvar rLeft = _n6.d;\n\t\t\tvar rRight = _n6.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\tvar _n1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));\n\t\t} else {\n\t\t\t_n2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === -1) && (right.a === 1)) {\n\t\t\t\t\tif (right.d.$ === -1) {\n\t\t\t\t\t\tif (right.d.a === 1) {\n\t\t\t\t\t\t\tvar _n3 = right.a;\n\t\t\t\t\t\t\tvar _n4 = right.d;\n\t\t\t\t\t\t\tvar _n5 = _n4.a;\n\t\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n6 = right.a;\n\t\t\t\t\t\tvar _n7 = right.d;\n\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _n2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor === 1) {\n\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\tvar _n3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _n4 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_n4.$ === -1) {\n\t\t\t\t\tvar nColor = _n4.a;\n\t\t\t\t\tvar nKey = _n4.b;\n\t\t\t\t\tvar nValue = _n4.c;\n\t\t\t\t\tvar nLeft = _n4.d;\n\t\t\t\t\tvar nRight = _n4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\telm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === -1) && (left.a === 1)) {\n\t\t\t\t\tvar _n4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\t\t\tvar _n6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n7 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_n7.$ === -1) {\n\t\t\t\t\t\t\tvar nColor = _n7.a;\n\t\t\t\t\t\t\tvar nKey = _n7.b;\n\t\t\t\t\t\t\tvar nValue = _n7.c;\n\t\t\t\t\t\t\tvar nLeft = _n7.d;\n\t\t\t\t\t\t\tvar nRight = _n7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7(elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -1) {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _n1 = elm$core$Dict$getMin(right);\n\t\t\t\tif (_n1.$ === -1) {\n\t\t\t\t\tvar minKey = _n1.b;\n\t\t\t\t\tvar minValue = _n1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\telm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$diff = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (k, v, t) {\n\t\t\t\t\treturn A2(elm$core$Dict$remove, k, t);\n\t\t\t\t}),\n\t\t\tt1,\n\t\t\tt2);\n\t});\nvar elm$core$Set$diff = F2(\n\tfunction (_n0, _n1) {\n\t\tvar dict1 = _n0;\n\t\tvar dict2 = _n1;\n\t\treturn A2(elm$core$Dict$diff, dict1, dict2);\n\t});\nvar author$project$Main$emptyLocationIndices = function (tiles) {\n\treturn elm$core$List$isEmpty(tiles) ? elm$core$Array$fromList(\n\t\telm$core$Set$toList(author$project$Main$allIndicesSet)) : elm$core$Array$fromList(\n\t\telm$core$Set$toList(\n\t\t\tA2(\n\t\t\t\telm$core$Set$diff,\n\t\t\t\tauthor$project$Main$allIndicesSet,\n\t\t\t\tauthor$project$Main$placedIndicesSet(tiles))));\n};\nvar author$project$Main$maxTiles = 16;\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar author$project$Main$lessThenMax = function (tiles) {\n\treturn _Utils_cmp(\n\t\telm$core$List$length(tiles),\n\t\tauthor$project$Main$maxTiles) < 0;\n};\nvar author$project$Main$AddTile = function (a) {\n\treturn {$: 3, a: a};\n};\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar author$project$Main$tileFromLocationIndex = F2(\n\tfunction (value, indx) {\n\t\treturn {h: ((indx - 1) % 4) + 1, P: 0, R: indx, t: false, I: false, _: true, i: (((indx - 1) / 4) | 0) + 1, k: value};\n\t});\nvar author$project$Main$valueFrom = function (num) {\n\treturn (num > 0.9) ? 4 : 2;\n};\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar elm$core$Array$length = function (_n0) {\n\tvar len = _n0.a;\n\treturn len;\n};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = elm$random$Random$next(seed0);\n\t\t\tvar range = elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = elm$random$Random$peel(seed1);\n\t\t\tvar n0 = elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 1.34217728e8) + lo) / 9.007199254740992e15;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\telm$random$Random$next(seed1));\n\t\t};\n\t});\nvar elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _n0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _n0.a;\n\t\t\tvar hi = _n0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\telm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar elm$random$Random$map2 = F3(\n\tfunction (func, _n0, _n1) {\n\t\tvar genA = _n0;\n\t\tvar genB = _n1;\n\t\treturn function (seed0) {\n\t\t\tvar _n2 = genA(seed0);\n\t\t\tvar a = _n2.a;\n\t\t\tvar seed1 = _n2.b;\n\t\t\tvar _n3 = genB(seed1);\n\t\t\tvar b = _n3.a;\n\t\t\tvar seed2 = _n3.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2(func, a, b),\n\t\t\t\tseed2);\n\t\t};\n\t});\nvar author$project$Main$tileGenerator = function (locationIndices) {\n\treturn A3(\n\t\telm$random$Random$map2,\n\t\tF2(\n\t\t\tfunction (indx, num) {\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Main$tileFromLocationIndex,\n\t\t\t\t\tauthor$project$Main$valueFrom(num),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\tA2(elm$core$Array$get, indx - 1, locationIndices)));\n\t\t\t}),\n\t\tA2(\n\t\t\telm$random$Random$int,\n\t\t\t1,\n\t\t\telm$core$Array$length(locationIndices)),\n\t\tA2(elm$random$Random$float, 0, 1));\n};\nvar elm$random$Random$Generate = elm$core$Basics$identity;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar elm$random$Random$init = A2(\n\telm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn elm$core$Task$succeed(\n\t\t\telm$random$Random$initialSeed(\n\t\t\t\telm$time$Time$posixToMillis(time)));\n\t},\n\telm$time$Time$now);\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{f: nodeList, c: (len / elm$core$Array$branchFactor) | 0, e: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _n1 = A2(elm$random$Random$step, generator, seed);\n\t\t\tvar value = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar elm$random$Random$onSelfMsg = F3(\n\tfunction (_n0, _n1, seed) {\n\t\treturn elm$core$Task$succeed(seed);\n\t});\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$cmdMap = F2(\n\tfunction (func, _n0) {\n\t\tvar generator = _n0;\n\t\treturn A2(elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager(elm$random$Random$init, elm$random$Random$onEffects, elm$random$Random$onSelfMsg, elm$random$Random$cmdMap);\nvar elm$random$Random$command = _Platform_leaf('Random');\nvar elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn elm$random$Random$command(\n\t\t\tA2(elm$random$Random$map, tagger, generator));\n\t});\nvar author$project$Main$newTileInEmptyLocation = function (locationIndices) {\n\treturn A2(\n\t\telm$random$Random$generate,\n\t\tauthor$project$Main$AddTile,\n\t\tauthor$project$Main$tileGenerator(locationIndices));\n};\nvar author$project$Main$changeTiles = F2(\n\tfunction (func, tiles) {\n\t\treturn A2(elm$core$List$map, func, tiles);\n\t});\nvar elm$core$List$sortWith = _List_sortWith;\nvar author$project$Main$sortTilesByRowsCols = function (tiles) {\n\tvar rowIndex = F2(\n\t\tfunction (row, col) {\n\t\t\treturn col + ((row - 1) * 4);\n\t\t});\n\tvar rowColOrder = F2(\n\t\tfunction (t1, t2) {\n\t\t\tvar index2 = A2(rowIndex, t2.i, t2.h);\n\t\t\tvar index1 = A2(rowIndex, t1.i, t1.h);\n\t\t\treturn (_Utils_cmp(index1, index2) > 0) ? 2 : ((_Utils_cmp(index1, index2) < 0) ? 0 : 1);\n\t\t});\n\treturn A2(\n\t\tauthor$project$Main$changeTiles,\n\t\tfunction (t) {\n\t\t\treturn _Utils_update(\n\t\t\t\tt,\n\t\t\t\t{\n\t\t\t\t\tR: A2(rowIndex, t.i, t.h)\n\t\t\t\t});\n\t\t},\n\t\tA2(elm$core$List$sortWith, rowColOrder, tiles));\n};\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$generateNewTile = function (tiles) {\n\treturn author$project$Main$lessThenMax(tiles) ? author$project$Main$newTileInEmptyLocation(\n\t\tauthor$project$Main$emptyLocationIndices(\n\t\t\tauthor$project$Main$sortTilesByRowsCols(tiles))) : elm$core$Platform$Cmd$none;\n};\nvar author$project$Main$GameState = F5(\n\tfunction (tiles, score, bestScore, status, nextTileKey) {\n\t\treturn {F: bestScore, B: nextTileKey, D: score, s: status, b: tiles};\n\t});\nvar elm$json$Json$Decode$fail = _Json_fail;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar author$project$Main$fromResult = function (result) {\n\tif (!result.$) {\n\t\tvar a = result.a;\n\t\treturn elm$json$Json$Decode$succeed(a);\n\t} else {\n\t\tvar errorMessage = result.a;\n\t\treturn elm$json$Json$Decode$fail(errorMessage);\n\t}\n};\nvar author$project$Main$Over = 1;\nvar author$project$Main$Playing = 0;\nvar author$project$Main$parseStatus = function (string) {\n\tswitch (string) {\n\t\tcase 'Playing':\n\t\t\treturn elm$core$Result$Ok(0);\n\t\tcase 'Over':\n\t\t\treturn elm$core$Result$Ok(1);\n\t\tcase 'Won':\n\t\t\treturn elm$core$Result$Ok(1);\n\t\tcase 'KeepPlaying':\n\t\t\treturn elm$core$Result$Ok(1);\n\t\tdefault:\n\t\t\treturn elm$core$Result$Err('Invalid status: ' + string);\n\t}\n};\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$json$Json$Decode$andThen = _Json_andThen;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar author$project$Main$statusDecoder = A2(\n\telm$json$Json$Decode$andThen,\n\tA2(elm$core$Basics$composeL, author$project$Main$fromResult, author$project$Main$parseStatus),\n\telm$json$Json$Decode$string);\nvar author$project$Main$Tile = F8(\n\tfunction (value, row, col, locIndex, _new, merged, moved, key) {\n\t\treturn {h: col, P: key, R: locIndex, t: merged, I: moved, _: _new, i: row, k: value};\n\t});\nvar elm$json$Json$Decode$bool = _Json_decodeBool;\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$int = _Json_decodeInt;\nvar elm$json$Json$Decode$map8 = _Json_map8;\nvar author$project$Main$tileDecoder = A9(\n\telm$json$Json$Decode$map8,\n\tauthor$project$Main$Tile,\n\tA2(elm$json$Json$Decode$field, 'value', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'row', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'col', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'locIndex', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'new', elm$json$Json$Decode$bool),\n\tA2(elm$json$Json$Decode$field, 'merged', elm$json$Json$Decode$bool),\n\tA2(elm$json$Json$Decode$field, 'moved', elm$json$Json$Decode$bool),\n\tA2(elm$json$Json$Decode$field, 'key', elm$json$Json$Decode$int));\nvar elm$json$Json$Decode$list = _Json_decodeList;\nvar author$project$Main$tileListDecoder = elm$json$Json$Decode$list(author$project$Main$tileDecoder);\nvar elm$json$Json$Decode$map5 = _Json_map5;\nvar author$project$Main$gameStateDecoder = A6(\n\telm$json$Json$Decode$map5,\n\tauthor$project$Main$GameState,\n\tA2(elm$json$Json$Decode$field, 'tiles', author$project$Main$tileListDecoder),\n\tA2(elm$json$Json$Decode$field, 'score', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'bestScore', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'status', author$project$Main$statusDecoder),\n\tA2(elm$json$Json$Decode$field, 'nextTileKey', elm$json$Json$Decode$int));\nvar elm$json$Json$Decode$decodeValue = _Json_run;\nvar author$project$Main$decodeGameState = function (flags) {\n\treturn A2(elm$json$Json$Decode$decodeValue, author$project$Main$gameStateDecoder, flags);\n};\nvar author$project$Main$defaultGameState = {F: 0, B: 1, D: 0, s: 0, b: _List_Nil};\nvar author$project$Main$parseGameState = function (flags) {\n\tvar _n0 = author$project$Main$decodeGameState(flags);\n\tif (!_n0.$) {\n\t\tvar gameState = _n0.a;\n\t\treturn gameState;\n\t} else {\n\t\tvar e = _n0.a;\n\t\treturn author$project$Main$defaultGameState;\n\t}\n};\nvar author$project$Main$initialModel = F3(\n\tfunction (flags, url, navKey) {\n\t\treturn {\n\t\t\ta: author$project$Main$parseGameState(flags),\n\t\t\taf: navKey,\n\t\t\tak: url\n\t\t};\n\t});\nvar author$project$Main$init = F3(\n\tfunction (flags, url, navKey) {\n\t\treturn _Utils_Tuple2(\n\t\t\tA3(author$project$Main$initialModel, flags, url, navKey),\n\t\t\tauthor$project$Main$generateNewTile(_List_Nil));\n\t});\nvar author$project$Main$MoveDown = {$: 6};\nvar author$project$Main$MoveLeft = {$: 8};\nvar author$project$Main$MoveRight = {$: 7};\nvar author$project$Main$MoveUp = {$: 5};\nvar author$project$Main$NoOp = {$: 0};\nvar author$project$Main$toDirectionMsg = function (str) {\n\tswitch (str) {\n\t\tcase 'ArrowUp':\n\t\t\treturn author$project$Main$MoveUp;\n\t\tcase 'ArrowDown':\n\t\t\treturn author$project$Main$MoveDown;\n\t\tcase 'ArrowRight':\n\t\t\treturn author$project$Main$MoveRight;\n\t\tcase 'ArrowLeft':\n\t\t\treturn author$project$Main$MoveLeft;\n\t\tdefault:\n\t\t\treturn author$project$Main$NoOp;\n\t}\n};\nvar elm$json$Json$Decode$map = _Json_map1;\nvar author$project$Main$keyDecoder = A2(\n\telm$json$Json$Decode$map,\n\tauthor$project$Main$toDirectionMsg,\n\tA2(elm$json$Json$Decode$field, 'key', elm$json$Json$Decode$string));\nvar elm$browser$Browser$Events$Document = 0;\nvar elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {ax: pids, aH: subs};\n\t});\nvar elm$browser$Browser$Events$init = elm$core$Task$succeed(\n\tA2(elm$browser$Browser$Events$State, _List_Nil, elm$core$Dict$empty));\nvar elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\telm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {ap: event, P: key};\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {aq: fragment, as: host, aw: path, ay: port_, aB: protocol, aC: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2(elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(elm$core$Dict$foldl, elm$core$Dict$insert, t2, t1);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _n6) {\n\t\t\t\tvar deads = _n6.a;\n\t\t\t\tvar lives = _n6.b;\n\t\t\t\tvar news = _n6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA3(elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_n4, pid, _n5) {\n\t\t\t\tvar deads = _n5.a;\n\t\t\t\tvar lives = _n5.b;\n\t\t\t\tvar news = _n5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _n2, _n3) {\n\t\t\t\tvar deads = _n3.a;\n\t\t\t\tvar lives = _n3.b;\n\t\t\t\tvar news = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3(elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2(elm$core$List$map, elm$browser$Browser$Events$addKey, subs);\n\t\tvar _n0 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.ax,\n\t\t\telm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _n0.a;\n\t\tvar livePids = _n0.b;\n\t\tvar makeNewPids = _n0.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\telm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\tA2(elm$core$List$map, elm$core$Process$kill, deadPids))));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _n0, state) {\n\t\tvar key = _n0.P;\n\t\tvar event = _n0.ap;\n\t\tvar toMessage = function (_n2) {\n\t\t\tvar subKey = _n2.a;\n\t\t\tvar _n3 = _n2.b;\n\t\t\tvar node = _n3.a;\n\t\t\tvar name = _n3.b;\n\t\t\tvar decoder = _n3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2(elm$core$List$filterMap, toMessage, state.aH);\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (_n1) {\n\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar decoder = _n0.c;\n\t\treturn A3(\n\t\t\telm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2(elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager(elm$browser$Browser$Events$init, elm$browser$Browser$Events$onEffects, elm$browser$Browser$Events$onSelfMsg, 0, elm$browser$Browser$Events$subMap);\nvar elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn elm$browser$Browser$Events$subscription(\n\t\t\tA3(elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar elm$browser$Browser$Events$onKeyDown = A2(elm$browser$Browser$Events$on, 0, 'keydown');\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar author$project$Main$subscriptions = function (model) {\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$browser$Browser$Events$onKeyDown(author$project$Main$keyDecoder)\n\t\t\t]));\n};\nvar author$project$Main$KeepPlaying = 3;\nvar author$project$Main$notMoved = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{I: false});\n};\nvar author$project$Main$notNew = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{_: false});\n};\nvar elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar author$project$Main$addTile = F2(\n\tfunction (tile, gs) {\n\t\treturn A2(\n\t\t\telm$core$List$cons,\n\t\t\t_Utils_update(\n\t\t\t\ttile,\n\t\t\t\t{P: gs.B}),\n\t\t\tA2(\n\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notNew, author$project$Main$notMoved),\n\t\t\t\tgs.b));\n\t});\nvar author$project$Main$Reversed = 1;\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar author$project$Main$maybeMoveTile = F3(\n\tfunction (t, c, r) {\n\t\tvar newpos = (!_Utils_eq(t.h, c)) || (!_Utils_eq(t.i, r));\n\t\treturn newpos ? _Utils_update(\n\t\t\tt,\n\t\t\t{h: c, I: true, i: r}) : t;\n\t});\nvar author$project$Main$mergeTilesHelp = F4(\n\tfunction (checked, t1, t2, rest) {\n\t\tmergeTilesHelp:\n\t\twhile (true) {\n\t\t\tvar merge = function (t) {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tt,\n\t\t\t\t\t{t: true, k: t.k * 2});\n\t\t\t};\n\t\t\tif (rest.b) {\n\t\t\t\tif (rest.b.b) {\n\t\t\t\t\tvar t3 = rest.a;\n\t\t\t\t\tvar _n1 = rest.b;\n\t\t\t\t\tvar t4 = _n1.a;\n\t\t\t\t\tvar ts = _n1.b;\n\t\t\t\t\tif (_Utils_eq(t1.k, t2.k)) {\n\t\t\t\t\t\tvar $temp$checked = A2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\t\tchecked),\n\t\t\t\t\t\t\t$temp$t1 = t3,\n\t\t\t\t\t\t\t$temp$t2 = t4,\n\t\t\t\t\t\t\t$temp$rest = ts;\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$checked = A2(elm$core$List$cons, t1, checked),\n\t\t\t\t\t\t\t$temp$t1 = t2,\n\t\t\t\t\t\t\t$temp$t2 = t3,\n\t\t\t\t\t\t\t$temp$rest = A2(elm$core$List$cons, t4, ts);\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar t3 = rest.a;\n\t\t\t\t\tif (_Utils_eq(t1.k, t2.k)) {\n\t\t\t\t\t\treturn elm$core$List$reverse(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\tt3,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\t\t\t\tchecked)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$checked = A2(elm$core$List$cons, t1, checked),\n\t\t\t\t\t\t\t$temp$t1 = t2,\n\t\t\t\t\t\t\t$temp$t2 = t3,\n\t\t\t\t\t\t\t$temp$rest = _List_Nil;\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _Utils_eq(t1.k, t2.k) ? elm$core$List$reverse(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\tchecked)) : elm$core$List$reverse(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tt2,\n\t\t\t\t\t\tA2(elm$core$List$cons, t1, checked)));\n\t\t\t}\n\t\t}\n\t});\nvar author$project$Main$mergeTiles = function (tiles) {\n\tif (tiles.b && tiles.b.b) {\n\t\tvar t1 = tiles.a;\n\t\tvar _n1 = tiles.b;\n\t\tvar t2 = _n1.a;\n\t\tvar rest = _n1.b;\n\t\treturn A4(author$project$Main$mergeTilesHelp, _List_Nil, t1, t2, rest);\n\t} else {\n\t\treturn tiles;\n\t}\n};\nvar author$project$Main$notMerged = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{t: false});\n};\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar author$project$Main$tilesInColumns = F2(\n\tfunction (direction, tiles) {\n\t\tvar colOrder = F2(\n\t\t\tfunction (t1, t2) {\n\t\t\t\treturn (_Utils_cmp(t1.h, t2.h) > 0) ? 2 : ((_Utils_cmp(t1.h, t2.h) < 0) ? 0 : 1);\n\t\t\t});\n\t\tvar sortedcol = function (col) {\n\t\t\treturn A2(\n\t\t\t\telm$core$List$sortWith,\n\t\t\t\tcolOrder,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\treturn _Utils_eq(t.h, col);\n\t\t\t\t\t},\n\t\t\t\t\ttiles));\n\t\t};\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (list) {\n\t\t\t\tif (!direction) {\n\t\t\t\t\treturn elm$core$Basics$identity(list);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$List$reverse(list);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (column) {\n\t\t\t\t\treturn sortedcol(column);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar author$project$Main$moveDown = function (tiles) {\n\tvar squashDown = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, r) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, t.h, r);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\telm$core$List$reverse(\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashDown,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashDown,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInColumns,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$Normal = 0;\nvar author$project$Main$tilesInRows = F2(\n\tfunction (direction, tiles) {\n\t\tvar rowOrder = F2(\n\t\t\tfunction (t1, t2) {\n\t\t\t\treturn (_Utils_cmp(t1.i, t2.i) > 0) ? 2 : ((_Utils_cmp(t1.i, t2.i) < 0) ? 0 : 1);\n\t\t\t});\n\t\tvar sortedrow = function (row) {\n\t\t\treturn A2(\n\t\t\t\telm$core$List$sortWith,\n\t\t\t\trowOrder,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\treturn _Utils_eq(t.i, row);\n\t\t\t\t\t},\n\t\t\t\t\ttiles));\n\t\t};\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (list) {\n\t\t\t\tif (!direction) {\n\t\t\t\t\treturn elm$core$Basics$identity(list);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$List$reverse(list);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn sortedrow(row);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t});\nvar author$project$Main$moveLeft = function (tiles) {\n\tvar squashLeft = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, c) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, c, t.i);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\tA2(elm$core$List$range, 1, 4));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashLeft,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashLeft,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInRows,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$moveRight = function (tiles) {\n\tvar squashRight = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, c) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, c, t.i);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\telm$core$List$reverse(\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashRight,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashRight,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInRows,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$moveUp = function (tiles) {\n\tvar squashUp = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, r) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, t.h, r);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\tA2(elm$core$List$range, 1, 4));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashUp,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashUp,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInColumns,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$NewTile = {$: 2};\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Process$sleep = _Process_sleep;\nvar author$project$Main$newTileLaterIfTilesChanged = function (tiles) {\n\tvar changed = A2(\n\t\telm$core$List$any,\n\t\tfunction (t) {\n\t\t\treturn t.I || t.t;\n\t\t},\n\t\ttiles);\n\treturn changed ? A2(\n\t\telm$core$Task$perform,\n\t\telm$core$Basics$always(author$project$Main$NewTile),\n\t\telm$core$Process$sleep(200)) : elm$core$Platform$Cmd$none;\n};\nvar author$project$Main$cacheData = _Platform_outgoingPort('cacheData', elm$core$Basics$identity);\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar author$project$Main$gameStatusEncoder = function (status) {\n\tvar statusToStr = function () {\n\t\tswitch (status) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Playing';\n\t\t\tcase 1:\n\t\t\t\treturn 'Over';\n\t\t\tcase 2:\n\t\t\t\treturn 'Won';\n\t\t\tdefault:\n\t\t\t\treturn 'KeepPlaying';\n\t\t}\n\t}();\n\treturn elm$json$Json$Encode$string(statusToStr);\n};\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$json$Json$Encode$int = _Json_wrap;\nvar elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, obj) {\n\t\t\t\t\tvar k = _n0.a;\n\t\t\t\t\tvar v = _n0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(0),\n\t\t\tpairs));\n};\nvar author$project$Main$tileEncoder = function (tile) {\n\treturn elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'value',\n\t\t\t\telm$json$Json$Encode$int(tile.k)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'row',\n\t\t\t\telm$json$Json$Encode$int(tile.i)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'col',\n\t\t\t\telm$json$Json$Encode$int(tile.h)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'locIndex',\n\t\t\t\telm$json$Json$Encode$int(tile.R)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'new',\n\t\t\t\telm$json$Json$Encode$bool(tile.t)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'merged',\n\t\t\t\telm$json$Json$Encode$bool(tile.t)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'moved',\n\t\t\t\telm$json$Json$Encode$bool(tile.I)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'key',\n\t\t\t\telm$json$Json$Encode$int(tile.P))\n\t\t\t]));\n};\nvar elm$json$Json$Encode$list = F2(\n\tfunction (func, entries) {\n\t\treturn _Json_wrap(\n\t\t\tA3(\n\t\t\t\telm$core$List$foldl,\n\t\t\t\t_Json_addEntry(func),\n\t\t\t\t_Json_emptyArray(0),\n\t\t\t\tentries));\n\t});\nvar author$project$Main$tilesEncoder = function (tiles) {\n\treturn A2(elm$json$Json$Encode$list, author$project$Main$tileEncoder, tiles);\n};\nvar author$project$Main$gameStateEncoder = function (gs) {\n\treturn elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'tiles',\n\t\t\t\tauthor$project$Main$tilesEncoder(gs.b)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'score',\n\t\t\t\telm$json$Json$Encode$int(gs.D)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'bestScore',\n\t\t\t\telm$json$Json$Encode$int(gs.F)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'status',\n\t\t\t\tauthor$project$Main$gameStatusEncoder(gs.s)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'nextTileKey',\n\t\t\t\telm$json$Json$Encode$int(gs.B))\n\t\t\t]));\n};\nvar author$project$Main$saveGameState = function (gs) {\n\treturn author$project$Main$cacheData(\n\t\tauthor$project$Main$gameStateEncoder(gs));\n};\nvar author$project$Main$Won = 2;\nvar author$project$Main$movePossible = function (tiles) {\n\tvar can = function (move) {\n\t\treturn author$project$Main$lessThenMax(\n\t\t\tmove(tiles));\n\t};\n\treturn can(author$project$Main$moveUp) || can(author$project$Main$moveLeft);\n};\nvar author$project$Main$gameStatus = function (gs) {\n\tvar gridFull = _Utils_eq(\n\t\telm$core$List$length(gs.b),\n\t\tauthor$project$Main$maxTiles);\n\tvar any2048Tile = A2(\n\t\telm$core$List$any,\n\t\tA2(\n\t\t\telm$core$Basics$composeR,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.k;\n\t\t\t},\n\t\t\telm$core$Basics$eq(2048)),\n\t\tgs.b);\n\tvar _n0 = gs.s;\n\tswitch (_n0) {\n\t\tcase 0:\n\t\t\treturn any2048Tile ? 2 : (gridFull ? (author$project$Main$movePossible(gs.b) ? 0 : 1) : 0);\n\t\tcase 3:\n\t\t\treturn gridFull ? (author$project$Main$movePossible(gs.b) ? 3 : 1) : 3;\n\t\tdefault:\n\t\t\treturn gs.s;\n\t}\n};\nvar author$project$Main$updateScoresAndGameStatus = function (gs) {\n\tvar lastMoveScore = A3(\n\t\telm$core$List$foldl,\n\t\telm$core$Basics$add,\n\t\t0,\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.k;\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (t) {\n\t\t\t\t\treturn t.t;\n\t\t\t\t},\n\t\t\t\tgs.b)));\n\tvar score = gs.D + lastMoveScore;\n\treturn _Utils_update(\n\t\tgs,\n\t\t{\n\t\t\tF: A2(elm$core$Basics$max, score, gs.F),\n\t\t\tD: score,\n\t\t\ts: author$project$Main$gameStatus(gs)\n\t\t});\n};\nvar elm$browser$Browser$Navigation$load = _Browser_load;\nvar elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;\nvar elm$url$Url$addPort = F2(\n\tfunction (maybePort, starter) {\n\t\tif (maybePort.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar port_ = maybePort.a;\n\t\t\treturn starter + (':' + elm$core$String$fromInt(port_));\n\t\t}\n\t});\nvar elm$url$Url$addPrefixed = F3(\n\tfunction (prefix, maybeSegment, starter) {\n\t\tif (maybeSegment.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar segment = maybeSegment.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstarter,\n\t\t\t\t_Utils_ap(prefix, segment));\n\t\t}\n\t});\nvar elm$url$Url$toString = function (url) {\n\tvar http = function () {\n\t\tvar _n0 = url.aB;\n\t\tif (!_n0) {\n\t\t\treturn 'http://';\n\t\t} else {\n\t\t\treturn 'https://';\n\t\t}\n\t}();\n\treturn A3(\n\t\telm$url$Url$addPrefixed,\n\t\t'#',\n\t\turl.aq,\n\t\tA3(\n\t\t\telm$url$Url$addPrefixed,\n\t\t\t'?',\n\t\t\turl.aC,\n\t\t\t_Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\telm$url$Url$addPort,\n\t\t\t\t\turl.ay,\n\t\t\t\t\t_Utils_ap(http, url.as)),\n\t\t\t\turl.aw)));\n};\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar gs = model.a;\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{B: 1, D: 0, s: 0, b: _List_Nil});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: newGs}),\n\t\t\t\t\tauthor$project$Main$generateNewTile(_List_Nil));\n\t\t\tcase 2:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tauthor$project$Main$generateNewTile(model.a.b));\n\t\t\tcase 3:\n\t\t\t\tvar tile = msg.a;\n\t\t\t\tvar gs = model.a;\n\t\t\t\tvar newGs = author$project$Main$updateScoresAndGameStatus(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tgs,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tB: gs.B + 1,\n\t\t\t\t\t\t\tb: author$project$Main$sortTilesByRowsCols(\n\t\t\t\t\t\t\t\tA2(author$project$Main$addTile, tile, gs))\n\t\t\t\t\t\t}));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: newGs}),\n\t\t\t\t\tauthor$project$Main$saveGameState(newGs));\n\t\t\tcase 4:\n\t\t\t\tvar gs = model.a;\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{s: 3});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: newGs}),\n\t\t\t\t\tauthor$project$Main$saveGameState(model.a));\n\t\t\tcase 5:\n\t\t\t\tvar gs = model.a;\n\t\t\t\tvar newTiles = author$project$Main$moveUp(gs.b);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{b: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 6:\n\t\t\t\tvar gs = model.a;\n\t\t\t\tvar newTiles = author$project$Main$moveDown(gs.b);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{b: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 8:\n\t\t\t\tvar gs = model.a;\n\t\t\t\tvar newTiles = author$project$Main$moveLeft(gs.b);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{b: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 7:\n\t\t\t\tvar gs = model.a;\n\t\t\t\tvar newTiles = author$project$Main$moveRight(gs.b);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{b: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 9:\n\t\t\t\tvar urlRequest = msg.a;\n\t\t\t\tif (!urlRequest.$) {\n\t\t\t\t\tvar url = urlRequest.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\t\tmodel.af,\n\t\t\t\t\t\t\telm$url$Url$toString(url)));\n\t\t\t\t} else {\n\t\t\t\t\tvar href = urlRequest.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\telm$browser$Browser$Navigation$load(href));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar url = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{ak: url}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar author$project$Main$NewGame = {$: 1};\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$p = _VirtualDom_node('p');\nvar elm$html$Html$strong = _VirtualDom_node('strong');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$Main$aboveGame = A2(\n\telm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('above-game')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('game-intro')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Join the numbers and get to the '),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$strong,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('2048 tile!')\n\t\t\t\t\t\t]))\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\telm$html$Html$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('restart-button'),\n\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$NewGame)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('New Game')\n\t\t\t\t]))\n\t\t]));\nvar elm$html$Html$hr = _VirtualDom_node('hr');\nvar author$project$Main$divider = A2(elm$html$Html$hr, _List_Nil, _List_Nil);\nvar author$project$Main$gameExplanation = A2(\n\telm$html$Html$p,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('game-explanation')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('important')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('How to play: ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('Use your '),\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('arrow keys')\n\t\t\t\t])),\n\t\t\telm$html$Html$text(' to move the tiles. When two tiles with the same number touch, they '),\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('merge into one!')\n\t\t\t\t]))\n\t\t]));\nvar elm$html$Html$a = _VirtualDom_node('a');\nvar elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\telm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar elm$html$Html$Attributes$target = elm$html$Html$Attributes$stringProperty('target');\nvar author$project$Main$gameFooter = A2(\n\telm$html$Html$p,\n\t_List_Nil,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$text('Original 2048 created by '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('http://gabrielecirulli.com'),\n\t\t\t\t\telm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Gabriele Cirulli. ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('Based on '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://itunes.apple.com/us/app/1024!/id823499224'),\n\t\t\t\t\telm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('1024 by Veewo Studio ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('and conceptually similar to '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('http://asherv.com/threes/'),\n\t\t\t\t\telm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Threes by Asher Vollmer.')\n\t\t\t\t]))\n\t\t]));\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar author$project$Main$gameHeader = function (gs) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('heading')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$h1,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('title')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Elm 2048')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('scores-container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('score-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(gs.D))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('best-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(gs.F))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$Main$KeepGoing = {$: 4};\nvar author$project$Main$gameStatusClassStr = function (gs) {\n\tvar _n0 = gs.s;\n\tswitch (_n0) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 3:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn ' game-over ';\n\t\tdefault:\n\t\t\treturn ' game-won';\n\t}\n};\nvar author$project$Main$gameStatusMessage = function (gs) {\n\tvar _n0 = gs.s;\n\tswitch (_n0) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 3:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn 'Game Over';\n\t\tdefault:\n\t\t\treturn 'You Won';\n\t}\n};\nvar author$project$Main$gameMessage = function (gs) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class(\n\t\t\t\t'game-message' + author$project$Main$gameStatusClassStr(gs))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$p,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\tauthor$project$Main$gameStatusMessage(gs))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('lower')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('keep-playing-button'),\n\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$KeepGoing)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text('Keep going')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('retry-button'),\n\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$NewGame)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text('Try again')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$Main$gameNotes = A2(\n\telm$html$Html$p,\n\t_List_Nil,\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('important')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Note: ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('This is not the official version of 2048! It is an '),\n\t\t\telm$html$Html$text('implementation of Gabriele Cirulli\\'s '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://github.com/gabrielecirulli/2048')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('2048 game ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('written in '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://elm-lang.org/')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Elm')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('. You can find the code for this Elm implementation here: '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://github.com/stepheneb/elm-2048')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('github.com/stepheneb/elm-2048')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('.')\n\t\t]));\nvar author$project$Main$gridRow = A2(\n\telm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('grid-row')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]));\nvar author$project$Main$gridContainer = A2(\n\telm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('grid-container')\n\t\t]),\n\t_List_fromArray(\n\t\t[author$project$Main$gridRow, author$project$Main$gridRow, author$project$Main$gridRow, author$project$Main$gridRow]));\nvar author$project$Main$mergedTileClassStr = function (t) {\n\tvar _n0 = t.t;\n\tif (_n0) {\n\t\treturn ' tile-merged ';\n\t} else {\n\t\treturn '';\n\t}\n};\nvar author$project$Main$newTileClassStr = function (t) {\n\tvar _n0 = t._;\n\tif (_n0) {\n\t\treturn ' tile-new ';\n\t} else {\n\t\treturn '';\n\t}\n};\nvar author$project$Main$tileClassStr = function (t) {\n\tvar classStr = A2(\n\t\telm$core$String$join,\n\t\t' ',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t'tile',\n\t\t\t\t'tile-' + elm$core$String$fromInt(t.k),\n\t\t\t\t'tile-position-' + (elm$core$String$fromInt(t.h) + ('-' + elm$core$String$fromInt(t.i)))\n\t\t\t]));\n\treturn _Utils_ap(\n\t\tclassStr,\n\t\t_Utils_ap(\n\t\t\tauthor$project$Main$newTileClassStr(t),\n\t\t\tauthor$project$Main$mergedTileClassStr(t)));\n};\nvar author$project$Main$singleTile = function (t) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class(\n\t\t\t\tauthor$project$Main$tileClassStr(t))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('tile-inner')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\telm$core$String$fromInt(t.k))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$virtual_dom$VirtualDom$lazy = _VirtualDom_lazy;\nvar elm$html$Html$Lazy$lazy = elm$virtual_dom$VirtualDom$lazy;\nvar author$project$Main$singleKeyedTile = function (t) {\n\treturn _Utils_Tuple2(\n\t\telm$core$String$fromInt(t.P),\n\t\tA2(elm$html$Html$Lazy$lazy, author$project$Main$singleTile, t));\n};\nvar author$project$Main$listOfTiles = function (tiles) {\n\treturn A2(elm$core$List$map, author$project$Main$singleKeyedTile, tiles);\n};\nvar elm$virtual_dom$VirtualDom$keyedNode = function (tag) {\n\treturn _VirtualDom_keyedNode(\n\t\t_VirtualDom_noScript(tag));\n};\nvar elm$html$Html$Keyed$node = elm$virtual_dom$VirtualDom$keyedNode;\nvar author$project$Main$tileContainer = function (tiles) {\n\treturn A3(\n\t\telm$html$Html$Keyed$node,\n\t\t'div',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('tile-container')\n\t\t\t]),\n\t\tauthor$project$Main$listOfTiles(tiles));\n};\nvar author$project$Main$view = function (model) {\n\treturn {\n\t\taN: _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tauthor$project$Main$gameHeader(model.a),\n\t\t\t\t\t\tauthor$project$Main$aboveGame,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('game-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tauthor$project$Main$gameMessage(model.a),\n\t\t\t\t\t\t\t\tauthor$project$Main$gridContainer,\n\t\t\t\t\t\t\t\tauthor$project$Main$tileContainer(model.a.b)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tauthor$project$Main$gameExplanation,\n\t\t\t\t\t\tauthor$project$Main$divider,\n\t\t\t\t\t\tauthor$project$Main$gameNotes,\n\t\t\t\t\t\tauthor$project$Main$divider,\n\t\t\t\t\t\tauthor$project$Main$gameFooter\n\t\t\t\t\t]))\n\t\t\t]),\n\t\ta2: 'Elm 2048'\n\t};\n};\nvar elm$browser$Browser$application = _Browser_application;\nvar elm$json$Json$Decode$value = _Json_decodeValue;\nvar author$project$Main$main = elm$browser$Browser$application(\n\t{aW: author$project$Main$init, aZ: author$project$Main$UrlChanged, a_: author$project$Main$LinkClicked, a1: author$project$Main$subscriptions, a3: author$project$Main$update, a4: author$project$Main$view});\n_Platform_export({'Main':{'init':author$project$Main$main(elm$json$Json$Decode$value)(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\n//  localStorage\nconst storageKey = \"elm2048\";\n\nconst getItem = () => JSON.parse(localStorage.getItem(storageKey));\n\nconst setItem = (data) => localStorage.setItem(storageKey, JSON.stringify(data));\n\nconst gameState = getItem();\n\nvar app = Elm.Main.init({\n  node: document.getElementById('root'),\n  flags: gameState\n});\n\napp.ports.cacheData.subscribe(function(data) {\n  setItem(data);\n});\n\nregisterServiceWorker();\n\nwindow.addEventListener(\"keydown\", event => {\n  if(event.key.includes(\"Arrow\")){\n    event.preventDefault()\n  }\n})\n"],"sourceRoot":""}