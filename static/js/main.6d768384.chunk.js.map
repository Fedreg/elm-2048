{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","A2","A3","A4","A5","A6","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_List_toArray","xs","push","_List_map2","ys","_List_sortWith","sort","ord","elm$core$Basics$EQ","elm$core$Basics$LT","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Utils_Tuple2","_Debug_crash","key","elm$core$Dict$toList","_Utils_equal","_Utils_cmp","_Utils_compare","n","elm$core$Basics$GT","_Utils_Tuple0","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","root","curr","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","identifier","Error","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_String_join","sep","strs","join","_String_slice","start","end","str","slice","_String_contains","sub","indexOf","_String_startsWith","_String_indexes","subLen","is","_Json_decodePrim","decoder","_Json_decodeInt","value","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_decodeBool","_Json_decodeValue","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_mapMany","decoders","g","_Json_andThen","callback","h","_Json_map1","d1","_Json_map5","d2","d3","d4","d5","_Json_map8","F9","d6","d7","d8","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_addField","object","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Process_sleep","time","id","setTimeout","clearTimeout","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_divertHrefToApp","_Platform_outgoingPortMap","tagger","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNode","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_lazy","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","w","stopPropagation","aj","currentEventNode","ah","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_document","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aW","a3","a1","initialModel","divertHrefToApp","U","view","a4","title","bodyNode","body","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","doc","nextNode","aN","_VirtualDom_diff","a2","cancelAnimationFrame","requestAnimationFrame","_Browser_getUrl","elm$url$Url$fromString","location","href","_Browser_pushUrl","url","elm$core$Task$perform","elm$core$Basics$never","history","pushState","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","elm$core$Maybe$Just","elm$core$Maybe$Nothing","author$project$Main$GameState","tiles","score","bestScore","status","nextTileKey","B","D","elm$core$Array$Array_elm_builtin","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","elm$core$List$cons","dict","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","_n0","remainingNodes","newAcc","elm$core$Basics$eq","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$add","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","elm$core$List$length","elm$core$List$map2","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$String$fromInt","elm$core$String$join","chunks","elm$json$Json$Decode$succeed","elm$json$Json$Decode$string","author$project$Main$statusDecoder","elm$json$Json$Decode$bool","elm$json$Json$Decode$field","elm$json$Json$Decode$int","author$project$Main$gameStateDecoder","F8","row","col","locIndex","_new","merged","moved","P","R","I","_","elm$json$Json$Decode$decodeValue","author$project$Main$defaultGameState","author$project$Main$initialModel","flags","navKey","author$project$Main$decodeGameState","author$project$Main$parseGameState","af","ak","elm$core$Platform$Cmd$none","author$project$Main$init","author$project$Main$MoveDown","author$project$Main$MoveLeft","author$project$Main$MoveRight","author$project$Main$MoveUp","author$project$Main$NoOp","elm$json$Json$Decode$map","author$project$Main$keyDecoder","elm$browser$Browser$Events$MySub","elm$browser$Browser$Events$State","subs","pids","ax","aH","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Task$succeed","elm$browser$Browser$Events$init","elm$browser$Browser$Events$addKey","elm$browser$Browser$Events$Event","ap","elm$core$Platform$sendToSelf","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Basics$identity","elm$core$Task$init","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$Task$map2","taskB","elm$core$Task$sequence","tasks","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","commands","elm$core$Task$command","toMessage","elm$core$String$slice","elm$core$String$dropLeft","elm$core$String$startsWith","elm$core$String$indexes","elm$core$String$isEmpty","elm$core$String$left","elm$core$String$contains","elm$url$Url$Url","protocol","host","port_","path","query","fragment","aq","aw","ay","aB","aC","elm$url$Url$chompBeforePath","params","_n1","total","code0","charCodeAt","code","elm$core$String$toInt","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","elm$url$Url$chompAfterProtocol","elm$browser$Browser$Events$spawn","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","right","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$fromList","assocs","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_n3","rKey","rValue","stepState","_n2","lKey","lValue","rest","leftovers","intermediateResult","_n4","elm$core$Dict$union","t1","t2","elm$core$Process$kill","elm$browser$Browser$Events$onEffects","stepRight","news","stepLeft","pid","_n5","lives","stepBoth","newSubs","livePids","makeNewPids","elm$core$List$maybeCons","mx","elm$core$List$filterMap","messages","millisToPosix","elm$browser$Browser$Events$subscription","elm$browser$Browser$Events$onKeyDown","elm$core$Platform$Sub$batch","author$project$Main$changeTiles","author$project$Main$notMoved","tile","author$project$Main$notNew","elm$core$Basics$composeR","author$project$Main$addTile","gs","elm$core$Set$empty","elm$core$Set$insert","elm$core$Set$fromList","author$project$Main$allIndicesSet","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Dict$moveRedLeft","rlL","rlR","elm$core$Dict$moveRedRight","elm$core$Dict$removeHelpPrepEQGT","F7","targetKey","_n2$2","elm$core$Dict$removeMin","lLeft","elm$core$Dict$removeHelp","_n7","elm$core$Dict$removeHelpEQGT","elm$core$Dict$getMin","elm$core$Dict$remove","elm$core$Dict$diff","elm$core$Set$diff","author$project$Main$emptyLocationIndices","author$project$Main$placedIndicesSet","keyList","author$project$Main$lessThenMax","author$project$Main$AddTile","author$project$Main$tileFromLocationIndex","indx","elm$core$Array$bitMask","elm$core$Elm$JsArray$unsafeGet","elm$core$Array$getHelp","elm$core$Array$get","startShift","elm$core$Array$tailIndex","elm$core$Maybe$withDefault","_default","maybe","elm$random$Random$Seed","elm$random$Random$next","incr","elm$random$Random$peel","word","elm$random$Random$float","seed0","seed1","range","n1","elm$random$Random$int","threshhold","seed","seedN","accountForBias","elm$random$Random$map2","genA","genB","seed2","elm$time$Time$now","Date","now","elm$random$Random$init","elm$random$Random$initialSeed","elm$random$Random$step","elm$random$Random$onEffects","newSeed","elm$random$Random$onSelfMsg","elm$random$Random$map","converter","exports","onUrlChange","onUrlRequest","elm$random$Random$command","elm$random$Random$generate","generator","elm$core$List$sortWith","author$project$Main$sortTilesByRowsCols","rowIndex","index2","index1","author$project$Main$generateNewTile","locationIndices","num","author$project$Main$valueFrom","author$project$Main$tileGenerator","author$project$Main$maybeMoveTile","author$project$Main$mergeTilesHelp","checked","mergeTilesHelp","merge","t3","t4","ts","author$project$Main$mergeTiles","author$project$Main$notMerged","elm$core$List$filter","isGood","author$project$Main$tilesInColumns","direction","colOrder","column","elm$core$List$append","elm$core$List$concat","lists","author$project$Main$tilesInRows","rowOrder","sortedrow","author$project$Main$moveLeft","squashLeft","tilelist","author$project$Main$moveUp","squashUp","author$project$Main$NewTile","elm$core$Basics$always","elm$core$List$any","isOkay","elm$core$Process$sleep","author$project$Main$newTileLaterIfTilesChanged","author$project$Main$cacheData","_Platform_checkPortName","cmdList","currentSubs","subscribe","unsubscribe","splice","elm$json$Json$Encode$string","elm$json$Json$Encode$bool","elm$json$Json$Encode$int","elm$json$Json$Encode$object","pairs","obj","author$project$Main$tileEncoder","elm$json$Json$Encode$list","entries","_Json_addEntry","author$project$Main$saveGameState","statusToStr","author$project$Main$gameStateEncoder","author$project$Main$movePossible","can","move","elm$browser$Browser$Navigation$pushUrl","elm$url$Url$addPort","maybePort","starter","elm$url$Url$addPrefixed","prefix","maybeSegment","author$project$Main$update","newGs","gridFull","any2048Tile","author$project$Main$gameStatus","author$project$Main$updateScoresAndGameStatus","newTiles","squashDown","squashRight","author$project$Main$moveRight","urlRequest","err","reload","elm$browser$Browser$Navigation$load","elm$url$Url$toString","author$project$Main$NewGame","elm$html$Html$button","elm$html$Html$div","elm$html$Html$p","elm$html$Html$strong","elm$html$Html$text","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$class","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","author$project$Main$aboveGame","author$project$Main$divider","author$project$Main$gameExplanation","elm$html$Html$a","elm$html$Html$Attributes$href","test","replace","elm$html$Html$Attributes$target","author$project$Main$gameFooter","elm$html$Html$h1","author$project$Main$KeepGoing","author$project$Main$gameNotes","author$project$Main$gridRow","author$project$Main$gridContainer","author$project$Main$singleTile","author$project$Main$newTileClassStr","author$project$Main$mergedTileClassStr","author$project$Main$tileClassStr","elm$html$Html$Lazy$lazy","author$project$Main$singleKeyedTile","elm$html$Html$Keyed$node","_VirtualDom_noScript","elm$json$Json$Decode$value","Main","aZ","a_","author$project$Main$gameStatusClassStr","author$project$Main$gameStatusMessage","author$project$Main$gameMessage","author$project$Main$listOfTiles","navigator","userAgent","ctrlKey","metaKey","shiftKey","button","target","hasAttribute","next","elm$browser$Browser$External","author$project$Main$main","_Platform_mergeExportsProd","this","isLocalhost","registerValidSW","swUrl","registration","installingWorker","installing","controller","console","error","gameState","JSON","localStorage","app","setItem","URL","process","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6d768384.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ai.Q === region.ao.Q)\n\t{\n\t\treturn 'on line ' + region.ai.Q;\n\t}\n\treturn 'on lines ' + region.ai.Q + ' through ' + region.ao.Q;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aW,\n\t\timpl.a3,\n\t\timpl.a1,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tw: func(record.w),\n\t\taj: record.aj,\n\t\tah: record.ah\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.w;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.aj;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.ah) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aW,\n\t\timpl.a3,\n\t\timpl.a1,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a4;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aW,\n\t\timpl.a3,\n\t\timpl.a1,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.U && impl.U(sendToApp)\n\t\t\tvar view = impl.a4;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aN);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.a2) && (_VirtualDom_doc.title = title = doc.a2);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aZ;\n\tvar onUrlRequest = impl.a_;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tU: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aB === next.aB\n\t\t\t\t\t\t\t&& curr.as === next.as\n\t\t\t\t\t\t\t&& curr.ay.a === next.ay.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taW: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aW, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta4: impl.a4,\n\t\ta3: impl.a3,\n\t\ta1: impl.a1\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aU: 'hidden', aO: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aU: 'mozHidden', aO: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aU: 'msHidden', aO: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aU: 'webkitHidden', aO: 'webkitvisibilitychange' }\n\t\t: { aU: 'hidden', aO: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taG: _Browser_getScene(),\n\t\taJ: {\n\t\t\tac: _Browser_window.pageXOffset,\n\t\t\tad: _Browser_window.pageYOffset,\n\t\t\tN: _Browser_doc.documentElement.clientWidth,\n\t\t\tH: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tN: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tH: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taG: {\n\t\t\t\tN: node.scrollWidth,\n\t\t\t\tH: node.scrollHeight\n\t\t\t},\n\t\t\taJ: {\n\t\t\t\tac: node.scrollLeft,\n\t\t\t\tad: node.scrollTop,\n\t\t\t\tN: node.clientWidth,\n\t\t\t\tH: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taG: _Browser_getScene(),\n\t\t\taJ: {\n\t\t\t\tac: x,\n\t\t\t\tad: y,\n\t\t\t\tN: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tH: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taP: {\n\t\t\t\tac: x + rect.left,\n\t\t\t\tad: y + rect.top,\n\t\t\t\tN: rect.width,\n\t\t\t\tH: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\nvar author$project$Main$LinkClicked = function (a) {\n\treturn {$: 9, a: a};\n};\nvar author$project$Main$UrlChanged = function (a) {\n\treturn {$: 10, a: a};\n};\nvar author$project$Main$GameState = F5(\n\tfunction (tiles, score, bestScore, status, nextTileKey) {\n\t\treturn {F: bestScore, B: nextTileKey, D: score, s: status, a: tiles};\n\t});\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$GT = 2;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.c) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.e);\n\t\t} else {\n\t\t\tvar treeLen = builder.c * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.f) : builder.f;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.c);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.e);\n\t\t}\n\t});\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{f: nodeList, c: (len / elm$core$Array$branchFactor) | 0, e: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$json$Json$Decode$fail = _Json_fail;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar author$project$Main$fromResult = function (result) {\n\tif (!result.$) {\n\t\tvar a = result.a;\n\t\treturn elm$json$Json$Decode$succeed(a);\n\t} else {\n\t\tvar errorMessage = result.a;\n\t\treturn elm$json$Json$Decode$fail(errorMessage);\n\t}\n};\nvar author$project$Main$KeepPlaying = 3;\nvar author$project$Main$Over = 1;\nvar author$project$Main$Playing = 0;\nvar author$project$Main$Won = 2;\nvar author$project$Main$parseStatus = function (string) {\n\tswitch (string) {\n\t\tcase 'Playing':\n\t\t\treturn elm$core$Result$Ok(0);\n\t\tcase 'Over':\n\t\t\treturn elm$core$Result$Ok(1);\n\t\tcase 'Won':\n\t\t\treturn elm$core$Result$Ok(2);\n\t\tcase 'KeepPlaying':\n\t\t\treturn elm$core$Result$Ok(3);\n\t\tdefault:\n\t\t\treturn elm$core$Result$Err('Invalid status: ' + string);\n\t}\n};\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$json$Json$Decode$andThen = _Json_andThen;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar author$project$Main$statusDecoder = A2(\n\telm$json$Json$Decode$andThen,\n\tA2(elm$core$Basics$composeL, author$project$Main$fromResult, author$project$Main$parseStatus),\n\telm$json$Json$Decode$string);\nvar author$project$Main$Tile = F8(\n\tfunction (value, row, col, locIndex, _new, merged, moved, key) {\n\t\treturn {h: col, P: key, R: locIndex, t: merged, I: moved, _: _new, i: row, k: value};\n\t});\nvar elm$json$Json$Decode$bool = _Json_decodeBool;\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$int = _Json_decodeInt;\nvar elm$json$Json$Decode$map8 = _Json_map8;\nvar author$project$Main$tileDecoder = A9(\n\telm$json$Json$Decode$map8,\n\tauthor$project$Main$Tile,\n\tA2(elm$json$Json$Decode$field, 'value', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'row', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'col', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'locIndex', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'new', elm$json$Json$Decode$bool),\n\tA2(elm$json$Json$Decode$field, 'merged', elm$json$Json$Decode$bool),\n\tA2(elm$json$Json$Decode$field, 'moved', elm$json$Json$Decode$bool),\n\tA2(elm$json$Json$Decode$field, 'key', elm$json$Json$Decode$int));\nvar elm$json$Json$Decode$list = _Json_decodeList;\nvar author$project$Main$tileListDecoder = elm$json$Json$Decode$list(author$project$Main$tileDecoder);\nvar elm$json$Json$Decode$map5 = _Json_map5;\nvar author$project$Main$gameStateDecoder = A6(\n\telm$json$Json$Decode$map5,\n\tauthor$project$Main$GameState,\n\tA2(elm$json$Json$Decode$field, 'tiles', author$project$Main$tileListDecoder),\n\tA2(elm$json$Json$Decode$field, 'score', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'bestScore', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'status', author$project$Main$statusDecoder),\n\tA2(elm$json$Json$Decode$field, 'nextTileKey', elm$json$Json$Decode$int));\nvar elm$json$Json$Decode$decodeValue = _Json_run;\nvar author$project$Main$decodeGameState = function (flags) {\n\treturn A2(elm$json$Json$Decode$decodeValue, author$project$Main$gameStateDecoder, flags);\n};\nvar author$project$Main$defaultGameState = {F: 0, B: 1, D: 0, s: 0, a: _List_Nil};\nvar author$project$Main$parseGameState = function (flags) {\n\tvar _n0 = author$project$Main$decodeGameState(flags);\n\tif (!_n0.$) {\n\t\tvar gameState = _n0.a;\n\t\treturn gameState;\n\t} else {\n\t\tvar e = _n0.a;\n\t\treturn author$project$Main$defaultGameState;\n\t}\n};\nvar author$project$Main$initialModel = F3(\n\tfunction (flags, url, navKey) {\n\t\treturn {\n\t\t\tb: author$project$Main$parseGameState(flags),\n\t\t\taf: navKey,\n\t\t\tak: url\n\t\t};\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$init = F3(\n\tfunction (flags, url, navKey) {\n\t\treturn _Utils_Tuple2(\n\t\t\tA3(author$project$Main$initialModel, flags, url, navKey),\n\t\t\telm$core$Platform$Cmd$none);\n\t});\nvar author$project$Main$MoveDown = {$: 6};\nvar author$project$Main$MoveLeft = {$: 8};\nvar author$project$Main$MoveRight = {$: 7};\nvar author$project$Main$MoveUp = {$: 5};\nvar author$project$Main$NoOp = {$: 0};\nvar author$project$Main$toDirectionMsg = function (str) {\n\tswitch (str) {\n\t\tcase 'ArrowUp':\n\t\t\treturn author$project$Main$MoveUp;\n\t\tcase 'ArrowDown':\n\t\t\treturn author$project$Main$MoveDown;\n\t\tcase 'ArrowRight':\n\t\t\treturn author$project$Main$MoveRight;\n\t\tcase 'ArrowLeft':\n\t\t\treturn author$project$Main$MoveLeft;\n\t\tdefault:\n\t\t\treturn author$project$Main$NoOp;\n\t}\n};\nvar elm$json$Json$Decode$map = _Json_map1;\nvar author$project$Main$keyDecoder = A2(\n\telm$json$Json$Decode$map,\n\tauthor$project$Main$toDirectionMsg,\n\tA2(elm$json$Json$Decode$field, 'key', elm$json$Json$Decode$string));\nvar elm$browser$Browser$Events$Document = 0;\nvar elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {ax: pids, aH: subs};\n\t});\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$browser$Browser$Events$init = elm$core$Task$succeed(\n\tA2(elm$browser$Browser$Events$State, _List_Nil, elm$core$Dict$empty));\nvar elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\telm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {ap: event, P: key};\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {aq: fragment, as: host, aw: path, ay: port_, aB: protocol, aC: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2(elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(elm$core$Dict$foldl, elm$core$Dict$insert, t2, t1);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _n6) {\n\t\t\t\tvar deads = _n6.a;\n\t\t\t\tvar lives = _n6.b;\n\t\t\t\tvar news = _n6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA3(elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_n4, pid, _n5) {\n\t\t\t\tvar deads = _n5.a;\n\t\t\t\tvar lives = _n5.b;\n\t\t\t\tvar news = _n5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _n2, _n3) {\n\t\t\t\tvar deads = _n3.a;\n\t\t\t\tvar lives = _n3.b;\n\t\t\t\tvar news = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3(elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2(elm$core$List$map, elm$browser$Browser$Events$addKey, subs);\n\t\tvar _n0 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.ax,\n\t\t\telm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _n0.a;\n\t\tvar livePids = _n0.b;\n\t\tvar makeNewPids = _n0.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\telm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\tA2(elm$core$List$map, elm$core$Process$kill, deadPids))));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _n0, state) {\n\t\tvar key = _n0.P;\n\t\tvar event = _n0.ap;\n\t\tvar toMessage = function (_n2) {\n\t\t\tvar subKey = _n2.a;\n\t\t\tvar _n3 = _n2.b;\n\t\t\tvar node = _n3.a;\n\t\t\tvar name = _n3.b;\n\t\t\tvar decoder = _n3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2(elm$core$List$filterMap, toMessage, state.aH);\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (_n1) {\n\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar decoder = _n0.c;\n\t\treturn A3(\n\t\t\telm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2(elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager(elm$browser$Browser$Events$init, elm$browser$Browser$Events$onEffects, elm$browser$Browser$Events$onSelfMsg, 0, elm$browser$Browser$Events$subMap);\nvar elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn elm$browser$Browser$Events$subscription(\n\t\t\tA3(elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar elm$browser$Browser$Events$onKeyDown = A2(elm$browser$Browser$Events$on, 0, 'keydown');\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar author$project$Main$subscriptions = function (model) {\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$browser$Browser$Events$onKeyDown(author$project$Main$keyDecoder)\n\t\t\t]));\n};\nvar author$project$Main$changeTiles = F2(\n\tfunction (func, tiles) {\n\t\treturn A2(elm$core$List$map, func, tiles);\n\t});\nvar author$project$Main$notMoved = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{I: false});\n};\nvar author$project$Main$notNew = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{_: false});\n};\nvar elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar author$project$Main$addTile = F2(\n\tfunction (tile, gs) {\n\t\treturn A2(\n\t\t\telm$core$List$cons,\n\t\t\t_Utils_update(\n\t\t\t\ttile,\n\t\t\t\t{P: gs.B}),\n\t\t\tA2(\n\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notNew, author$project$Main$notMoved),\n\t\t\t\tgs.a));\n\t});\nvar elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;\nvar elm$core$Set$empty = elm$core$Dict$empty;\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A3(elm$core$Dict$insert, key, 0, dict);\n\t});\nvar elm$core$Set$fromList = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$Set$insert, elm$core$Set$empty, list);\n};\nvar author$project$Main$allIndicesSet = elm$core$Set$fromList(\n\tA2(elm$core$List$range, 1, 16));\nvar author$project$Main$placedIndicesSet = function (tiles) {\n\treturn elm$core$Set$fromList(\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.R;\n\t\t\t},\n\t\t\ttiles));\n};\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{f: nodeList, c: nodeListSize, e: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.e.d.$ === -1) && (!dict.e.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar lLeft = _n1.d;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n2 = dict.e;\n\t\t\tvar rClr = _n2.a;\n\t\t\tvar rK = _n2.b;\n\t\t\tvar rV = _n2.c;\n\t\t\tvar rLeft = _n2.d;\n\t\t\tvar _n3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _n2.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n4 = dict.d;\n\t\t\tvar lClr = _n4.a;\n\t\t\tvar lK = _n4.b;\n\t\t\tvar lV = _n4.c;\n\t\t\tvar lLeft = _n4.d;\n\t\t\tvar lRight = _n4.e;\n\t\t\tvar _n5 = dict.e;\n\t\t\tvar rClr = _n5.a;\n\t\t\tvar rK = _n5.b;\n\t\t\tvar rV = _n5.c;\n\t\t\tvar rLeft = _n5.d;\n\t\t\tvar rRight = _n5.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.d.d.$ === -1) && (!dict.d.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar _n2 = _n1.d;\n\t\t\tvar _n3 = _n2.a;\n\t\t\tvar llK = _n2.b;\n\t\t\tvar llV = _n2.c;\n\t\t\tvar llLeft = _n2.d;\n\t\t\tvar llRight = _n2.e;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n4 = dict.e;\n\t\t\tvar rClr = _n4.a;\n\t\t\tvar rK = _n4.b;\n\t\t\tvar rV = _n4.c;\n\t\t\tvar rLeft = _n4.d;\n\t\t\tvar rRight = _n4.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n5 = dict.d;\n\t\t\tvar lClr = _n5.a;\n\t\t\tvar lK = _n5.b;\n\t\t\tvar lV = _n5.c;\n\t\t\tvar lLeft = _n5.d;\n\t\t\tvar lRight = _n5.e;\n\t\t\tvar _n6 = dict.e;\n\t\t\tvar rClr = _n6.a;\n\t\t\tvar rK = _n6.b;\n\t\t\tvar rV = _n6.c;\n\t\t\tvar rLeft = _n6.d;\n\t\t\tvar rRight = _n6.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\tvar _n1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));\n\t\t} else {\n\t\t\t_n2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === -1) && (right.a === 1)) {\n\t\t\t\t\tif (right.d.$ === -1) {\n\t\t\t\t\t\tif (right.d.a === 1) {\n\t\t\t\t\t\t\tvar _n3 = right.a;\n\t\t\t\t\t\t\tvar _n4 = right.d;\n\t\t\t\t\t\t\tvar _n5 = _n4.a;\n\t\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n6 = right.a;\n\t\t\t\t\t\tvar _n7 = right.d;\n\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _n2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor === 1) {\n\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\tvar _n3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _n4 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_n4.$ === -1) {\n\t\t\t\t\tvar nColor = _n4.a;\n\t\t\t\t\tvar nKey = _n4.b;\n\t\t\t\t\tvar nValue = _n4.c;\n\t\t\t\t\tvar nLeft = _n4.d;\n\t\t\t\t\tvar nRight = _n4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\telm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === -1) && (left.a === 1)) {\n\t\t\t\t\tvar _n4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\t\t\tvar _n6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n7 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_n7.$ === -1) {\n\t\t\t\t\t\t\tvar nColor = _n7.a;\n\t\t\t\t\t\t\tvar nKey = _n7.b;\n\t\t\t\t\t\t\tvar nValue = _n7.c;\n\t\t\t\t\t\t\tvar nLeft = _n7.d;\n\t\t\t\t\t\t\tvar nRight = _n7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7(elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -1) {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _n1 = elm$core$Dict$getMin(right);\n\t\t\t\tif (_n1.$ === -1) {\n\t\t\t\t\tvar minKey = _n1.b;\n\t\t\t\t\tvar minValue = _n1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\telm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$diff = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (k, v, t) {\n\t\t\t\t\treturn A2(elm$core$Dict$remove, k, t);\n\t\t\t\t}),\n\t\t\tt1,\n\t\t\tt2);\n\t});\nvar elm$core$Set$diff = F2(\n\tfunction (_n0, _n1) {\n\t\tvar dict1 = _n0;\n\t\tvar dict2 = _n1;\n\t\treturn A2(elm$core$Dict$diff, dict1, dict2);\n\t});\nvar author$project$Main$emptyLocationIndices = function (tiles) {\n\treturn elm$core$List$isEmpty(tiles) ? elm$core$Array$fromList(\n\t\telm$core$Set$toList(author$project$Main$allIndicesSet)) : elm$core$Array$fromList(\n\t\telm$core$Set$toList(\n\t\t\tA2(\n\t\t\t\telm$core$Set$diff,\n\t\t\t\tauthor$project$Main$allIndicesSet,\n\t\t\t\tauthor$project$Main$placedIndicesSet(tiles))));\n};\nvar author$project$Main$maxTiles = 16;\nvar author$project$Main$lessThenMax = function (tiles) {\n\treturn _Utils_cmp(\n\t\telm$core$List$length(tiles),\n\t\tauthor$project$Main$maxTiles) < 0;\n};\nvar author$project$Main$AddTile = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Main$tileFromLocationIndex = F2(\n\tfunction (value, indx) {\n\t\treturn {h: ((indx - 1) % 4) + 1, P: 0, R: indx, t: false, I: false, _: true, i: (((indx - 1) / 4) | 0) + 1, k: value};\n\t});\nvar author$project$Main$valueFrom = function (num) {\n\treturn (num > 0.9) ? 4 : 2;\n};\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar elm$core$Array$length = function (_n0) {\n\tvar len = _n0.a;\n\treturn len;\n};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = elm$random$Random$next(seed0);\n\t\t\tvar range = elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = elm$random$Random$peel(seed1);\n\t\t\tvar n0 = elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 1.34217728e8) + lo) / 9.007199254740992e15;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\telm$random$Random$next(seed1));\n\t\t};\n\t});\nvar elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _n0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _n0.a;\n\t\t\tvar hi = _n0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\telm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar elm$random$Random$map2 = F3(\n\tfunction (func, _n0, _n1) {\n\t\tvar genA = _n0;\n\t\tvar genB = _n1;\n\t\treturn function (seed0) {\n\t\t\tvar _n2 = genA(seed0);\n\t\t\tvar a = _n2.a;\n\t\t\tvar seed1 = _n2.b;\n\t\t\tvar _n3 = genB(seed1);\n\t\t\tvar b = _n3.a;\n\t\t\tvar seed2 = _n3.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2(func, a, b),\n\t\t\t\tseed2);\n\t\t};\n\t});\nvar author$project$Main$tileGenerator = function (locationIndices) {\n\treturn A3(\n\t\telm$random$Random$map2,\n\t\tF2(\n\t\t\tfunction (indx, num) {\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Main$tileFromLocationIndex,\n\t\t\t\t\tauthor$project$Main$valueFrom(num),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\tA2(elm$core$Array$get, indx - 1, locationIndices)));\n\t\t\t}),\n\t\tA2(\n\t\t\telm$random$Random$int,\n\t\t\t1,\n\t\t\telm$core$Array$length(locationIndices)),\n\t\tA2(elm$random$Random$float, 0, 1));\n};\nvar elm$random$Random$Generate = elm$core$Basics$identity;\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar elm$random$Random$init = A2(\n\telm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn elm$core$Task$succeed(\n\t\t\telm$random$Random$initialSeed(\n\t\t\t\telm$time$Time$posixToMillis(time)));\n\t},\n\telm$time$Time$now);\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _n1 = A2(elm$random$Random$step, generator, seed);\n\t\t\tvar value = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar elm$random$Random$onSelfMsg = F3(\n\tfunction (_n0, _n1, seed) {\n\t\treturn elm$core$Task$succeed(seed);\n\t});\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$cmdMap = F2(\n\tfunction (func, _n0) {\n\t\tvar generator = _n0;\n\t\treturn A2(elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager(elm$random$Random$init, elm$random$Random$onEffects, elm$random$Random$onSelfMsg, elm$random$Random$cmdMap);\nvar elm$random$Random$command = _Platform_leaf('Random');\nvar elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn elm$random$Random$command(\n\t\t\tA2(elm$random$Random$map, tagger, generator));\n\t});\nvar author$project$Main$newTileInEmptyLocation = function (locationIndices) {\n\treturn A2(\n\t\telm$random$Random$generate,\n\t\tauthor$project$Main$AddTile,\n\t\tauthor$project$Main$tileGenerator(locationIndices));\n};\nvar elm$core$List$sortWith = _List_sortWith;\nvar author$project$Main$sortTilesByRowsCols = function (tiles) {\n\tvar rowIndex = F2(\n\t\tfunction (row, col) {\n\t\t\treturn col + ((row - 1) * 4);\n\t\t});\n\tvar rowColOrder = F2(\n\t\tfunction (t1, t2) {\n\t\t\tvar index2 = A2(rowIndex, t2.i, t2.h);\n\t\t\tvar index1 = A2(rowIndex, t1.i, t1.h);\n\t\t\treturn (_Utils_cmp(index1, index2) > 0) ? 2 : ((_Utils_cmp(index1, index2) < 0) ? 0 : 1);\n\t\t});\n\treturn A2(\n\t\tauthor$project$Main$changeTiles,\n\t\tfunction (t) {\n\t\t\treturn _Utils_update(\n\t\t\t\tt,\n\t\t\t\t{\n\t\t\t\t\tR: A2(rowIndex, t.i, t.h)\n\t\t\t\t});\n\t\t},\n\t\tA2(elm$core$List$sortWith, rowColOrder, tiles));\n};\nvar author$project$Main$generateNewTile = function (tiles) {\n\treturn author$project$Main$lessThenMax(tiles) ? author$project$Main$newTileInEmptyLocation(\n\t\tauthor$project$Main$emptyLocationIndices(\n\t\t\tauthor$project$Main$sortTilesByRowsCols(tiles))) : elm$core$Platform$Cmd$none;\n};\nvar author$project$Main$Reversed = 1;\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar author$project$Main$maybeMoveTile = F3(\n\tfunction (t, c, r) {\n\t\tvar newpos = (!_Utils_eq(t.h, c)) || (!_Utils_eq(t.i, r));\n\t\treturn newpos ? _Utils_update(\n\t\t\tt,\n\t\t\t{h: c, I: true, i: r}) : t;\n\t});\nvar author$project$Main$mergeTilesHelp = F4(\n\tfunction (checked, t1, t2, rest) {\n\t\tmergeTilesHelp:\n\t\twhile (true) {\n\t\t\tvar merge = function (t) {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tt,\n\t\t\t\t\t{t: true, k: t.k * 2});\n\t\t\t};\n\t\t\tif (rest.b) {\n\t\t\t\tif (rest.b.b) {\n\t\t\t\t\tvar t3 = rest.a;\n\t\t\t\t\tvar _n1 = rest.b;\n\t\t\t\t\tvar t4 = _n1.a;\n\t\t\t\t\tvar ts = _n1.b;\n\t\t\t\t\tif (_Utils_eq(t1.k, t2.k)) {\n\t\t\t\t\t\tvar $temp$checked = A2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\t\tchecked),\n\t\t\t\t\t\t\t$temp$t1 = t3,\n\t\t\t\t\t\t\t$temp$t2 = t4,\n\t\t\t\t\t\t\t$temp$rest = ts;\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$checked = A2(elm$core$List$cons, t1, checked),\n\t\t\t\t\t\t\t$temp$t1 = t2,\n\t\t\t\t\t\t\t$temp$t2 = t3,\n\t\t\t\t\t\t\t$temp$rest = A2(elm$core$List$cons, t4, ts);\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar t3 = rest.a;\n\t\t\t\t\tif (_Utils_eq(t1.k, t2.k)) {\n\t\t\t\t\t\treturn elm$core$List$reverse(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\tt3,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\t\t\t\tchecked)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$checked = A2(elm$core$List$cons, t1, checked),\n\t\t\t\t\t\t\t$temp$t1 = t2,\n\t\t\t\t\t\t\t$temp$t2 = t3,\n\t\t\t\t\t\t\t$temp$rest = _List_Nil;\n\t\t\t\t\t\tchecked = $temp$checked;\n\t\t\t\t\t\tt1 = $temp$t1;\n\t\t\t\t\t\tt2 = $temp$t2;\n\t\t\t\t\t\trest = $temp$rest;\n\t\t\t\t\t\tcontinue mergeTilesHelp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _Utils_eq(t1.k, t2.k) ? elm$core$List$reverse(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tmerge(t2),\n\t\t\t\t\t\tchecked)) : elm$core$List$reverse(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tt2,\n\t\t\t\t\t\tA2(elm$core$List$cons, t1, checked)));\n\t\t\t}\n\t\t}\n\t});\nvar author$project$Main$mergeTiles = function (tiles) {\n\tif (tiles.b && tiles.b.b) {\n\t\tvar t1 = tiles.a;\n\t\tvar _n1 = tiles.b;\n\t\tvar t2 = _n1.a;\n\t\tvar rest = _n1.b;\n\t\treturn A4(author$project$Main$mergeTilesHelp, _List_Nil, t1, t2, rest);\n\t} else {\n\t\treturn tiles;\n\t}\n};\nvar author$project$Main$notMerged = function (tile) {\n\treturn _Utils_update(\n\t\ttile,\n\t\t{t: false});\n};\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar author$project$Main$tilesInColumns = F2(\n\tfunction (direction, tiles) {\n\t\tvar colOrder = F2(\n\t\t\tfunction (t1, t2) {\n\t\t\t\treturn (_Utils_cmp(t1.h, t2.h) > 0) ? 2 : ((_Utils_cmp(t1.h, t2.h) < 0) ? 0 : 1);\n\t\t\t});\n\t\tvar sortedcol = function (col) {\n\t\t\treturn A2(\n\t\t\t\telm$core$List$sortWith,\n\t\t\t\tcolOrder,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\treturn _Utils_eq(t.h, col);\n\t\t\t\t\t},\n\t\t\t\t\ttiles));\n\t\t};\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (list) {\n\t\t\t\tif (!direction) {\n\t\t\t\t\treturn elm$core$Basics$identity(list);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$List$reverse(list);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (column) {\n\t\t\t\t\treturn sortedcol(column);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar author$project$Main$moveDown = function (tiles) {\n\tvar squashDown = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, r) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, t.h, r);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\telm$core$List$reverse(\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashDown,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashDown,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInColumns,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$Normal = 0;\nvar author$project$Main$tilesInRows = F2(\n\tfunction (direction, tiles) {\n\t\tvar rowOrder = F2(\n\t\t\tfunction (t1, t2) {\n\t\t\t\treturn (_Utils_cmp(t1.i, t2.i) > 0) ? 2 : ((_Utils_cmp(t1.i, t2.i) < 0) ? 0 : 1);\n\t\t\t});\n\t\tvar sortedrow = function (row) {\n\t\t\treturn A2(\n\t\t\t\telm$core$List$sortWith,\n\t\t\t\trowOrder,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\treturn _Utils_eq(t.i, row);\n\t\t\t\t\t},\n\t\t\t\t\ttiles));\n\t\t};\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (list) {\n\t\t\t\tif (!direction) {\n\t\t\t\t\treturn elm$core$Basics$identity(list);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$List$reverse(list);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn sortedrow(row);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t});\nvar author$project$Main$moveLeft = function (tiles) {\n\tvar squashLeft = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, c) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, c, t.i);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\tA2(elm$core$List$range, 1, 4));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashLeft,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashLeft,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInRows,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$moveRight = function (tiles) {\n\tvar squashRight = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, c) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, c, t.i);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\telm$core$List$reverse(\n\t\t\t\tA2(elm$core$List$range, 1, 4)));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashRight,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashRight,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInRows,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$moveUp = function (tiles) {\n\tvar squashUp = function (tilelist) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tF2(\n\t\t\t\tfunction (t, r) {\n\t\t\t\t\treturn A3(author$project$Main$maybeMoveTile, t, t.h, r);\n\t\t\t\t}),\n\t\t\ttilelist,\n\t\t\tA2(elm$core$List$range, 1, 4));\n\t};\n\treturn author$project$Main$sortTilesByRowsCols(\n\t\telm$core$List$concat(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tsquashUp,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Main$mergeTiles,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tsquashUp,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Main$tilesInColumns,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Main$changeTiles,\n\t\t\t\t\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$notMerged, author$project$Main$notMoved),\n\t\t\t\t\t\t\t\ttiles)))))));\n};\nvar author$project$Main$NewTile = {$: 2};\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Process$sleep = _Process_sleep;\nvar author$project$Main$newTileLaterIfTilesChanged = function (tiles) {\n\tvar changed = A2(\n\t\telm$core$List$any,\n\t\tfunction (t) {\n\t\t\treturn t.I || t.t;\n\t\t},\n\t\ttiles);\n\treturn changed ? A2(\n\t\telm$core$Task$perform,\n\t\telm$core$Basics$always(author$project$Main$NewTile),\n\t\telm$core$Process$sleep(100)) : elm$core$Platform$Cmd$none;\n};\nvar author$project$Main$cacheData = _Platform_outgoingPort('cacheData', elm$core$Basics$identity);\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar author$project$Main$gameStatusEncoder = function (status) {\n\tvar statusToStr = function () {\n\t\tswitch (status) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Playing';\n\t\t\tcase 1:\n\t\t\t\treturn 'Over';\n\t\t\tcase 2:\n\t\t\t\treturn 'Won';\n\t\t\tdefault:\n\t\t\t\treturn 'KeepPlaying';\n\t\t}\n\t}();\n\treturn elm$json$Json$Encode$string(statusToStr);\n};\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$json$Json$Encode$int = _Json_wrap;\nvar elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, obj) {\n\t\t\t\t\tvar k = _n0.a;\n\t\t\t\t\tvar v = _n0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(0),\n\t\t\tpairs));\n};\nvar author$project$Main$tileEncoder = function (tile) {\n\treturn elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'value',\n\t\t\t\telm$json$Json$Encode$int(tile.k)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'row',\n\t\t\t\telm$json$Json$Encode$int(tile.i)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'col',\n\t\t\t\telm$json$Json$Encode$int(tile.h)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'locIndex',\n\t\t\t\telm$json$Json$Encode$int(tile.R)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'new',\n\t\t\t\telm$json$Json$Encode$bool(tile.t)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'merged',\n\t\t\t\telm$json$Json$Encode$bool(tile.t)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'moved',\n\t\t\t\telm$json$Json$Encode$bool(tile.I)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'key',\n\t\t\t\telm$json$Json$Encode$int(tile.P))\n\t\t\t]));\n};\nvar elm$json$Json$Encode$list = F2(\n\tfunction (func, entries) {\n\t\treturn _Json_wrap(\n\t\t\tA3(\n\t\t\t\telm$core$List$foldl,\n\t\t\t\t_Json_addEntry(func),\n\t\t\t\t_Json_emptyArray(0),\n\t\t\t\tentries));\n\t});\nvar author$project$Main$tilesEncoder = function (tiles) {\n\treturn A2(elm$json$Json$Encode$list, author$project$Main$tileEncoder, tiles);\n};\nvar author$project$Main$gameStateEncoder = function (gs) {\n\treturn elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'tiles',\n\t\t\t\tauthor$project$Main$tilesEncoder(gs.a)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'score',\n\t\t\t\telm$json$Json$Encode$int(gs.D)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'bestScore',\n\t\t\t\telm$json$Json$Encode$int(gs.F)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'status',\n\t\t\t\tauthor$project$Main$gameStatusEncoder(gs.s)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'nextTileKey',\n\t\t\t\telm$json$Json$Encode$int(gs.B))\n\t\t\t]));\n};\nvar author$project$Main$saveGameState = function (gs) {\n\treturn author$project$Main$cacheData(\n\t\tauthor$project$Main$gameStateEncoder(gs));\n};\nvar author$project$Main$movePossible = function (tiles) {\n\tvar can = function (move) {\n\t\treturn author$project$Main$lessThenMax(\n\t\t\tmove(tiles));\n\t};\n\treturn can(author$project$Main$moveUp) || can(author$project$Main$moveLeft);\n};\nvar author$project$Main$gameStatus = function (gs) {\n\tvar gridFull = _Utils_eq(\n\t\telm$core$List$length(gs.a),\n\t\tauthor$project$Main$maxTiles);\n\tvar any2048Tile = A2(\n\t\telm$core$List$any,\n\t\tA2(\n\t\t\telm$core$Basics$composeR,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.k;\n\t\t\t},\n\t\t\telm$core$Basics$eq(2048)),\n\t\tgs.a);\n\tvar _n0 = gs.s;\n\tswitch (_n0) {\n\t\tcase 0:\n\t\t\treturn any2048Tile ? 2 : (gridFull ? (author$project$Main$movePossible(gs.a) ? 0 : 1) : 0);\n\t\tcase 3:\n\t\t\treturn gridFull ? (author$project$Main$movePossible(gs.a) ? 3 : 1) : 3;\n\t\tdefault:\n\t\t\treturn gs.s;\n\t}\n};\nvar author$project$Main$updateScoresAndGameStatus = function (gs) {\n\tvar lastMoveScore = A3(\n\t\telm$core$List$foldl,\n\t\telm$core$Basics$add,\n\t\t0,\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.k;\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (t) {\n\t\t\t\t\treturn t.t;\n\t\t\t\t},\n\t\t\t\tgs.a)));\n\tvar score = gs.D + lastMoveScore;\n\treturn _Utils_update(\n\t\tgs,\n\t\t{\n\t\t\tF: A2(elm$core$Basics$max, score, gs.F),\n\t\t\tD: score,\n\t\t\ts: author$project$Main$gameStatus(gs)\n\t\t});\n};\nvar elm$browser$Browser$Navigation$load = _Browser_load;\nvar elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;\nvar elm$url$Url$addPort = F2(\n\tfunction (maybePort, starter) {\n\t\tif (maybePort.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar port_ = maybePort.a;\n\t\t\treturn starter + (':' + elm$core$String$fromInt(port_));\n\t\t}\n\t});\nvar elm$url$Url$addPrefixed = F3(\n\tfunction (prefix, maybeSegment, starter) {\n\t\tif (maybeSegment.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar segment = maybeSegment.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstarter,\n\t\t\t\t_Utils_ap(prefix, segment));\n\t\t}\n\t});\nvar elm$url$Url$toString = function (url) {\n\tvar http = function () {\n\t\tvar _n0 = url.aB;\n\t\tif (!_n0) {\n\t\t\treturn 'http://';\n\t\t} else {\n\t\t\treturn 'https://';\n\t\t}\n\t}();\n\treturn A3(\n\t\telm$url$Url$addPrefixed,\n\t\t'#',\n\t\turl.aq,\n\t\tA3(\n\t\t\telm$url$Url$addPrefixed,\n\t\t\t'?',\n\t\t\turl.aC,\n\t\t\t_Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\telm$url$Url$addPort,\n\t\t\t\t\turl.ay,\n\t\t\t\t\t_Utils_ap(http, url.as)),\n\t\t\t\turl.aw)));\n};\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar gs = model.b;\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{B: 1, D: 0, s: 0, a: _List_Nil});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{b: newGs}),\n\t\t\t\t\tauthor$project$Main$generateNewTile(newGs.a));\n\t\t\tcase 2:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tauthor$project$Main$generateNewTile(model.b.a));\n\t\t\tcase 3:\n\t\t\t\tvar tile = msg.a;\n\t\t\t\tvar gs = model.b;\n\t\t\t\tvar newGs = author$project$Main$updateScoresAndGameStatus(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tgs,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tB: gs.B + 1,\n\t\t\t\t\t\t\ta: author$project$Main$sortTilesByRowsCols(\n\t\t\t\t\t\t\t\tA2(author$project$Main$addTile, tile, gs))\n\t\t\t\t\t\t}));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{b: newGs}),\n\t\t\t\t\t(elm$core$List$length(newGs.a) < 2) ? author$project$Main$generateNewTile(newGs.a) : author$project$Main$saveGameState(newGs));\n\t\t\tcase 4:\n\t\t\t\tvar gs = model.b;\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{s: 3});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{b: newGs}),\n\t\t\t\t\tauthor$project$Main$saveGameState(model.b));\n\t\t\tcase 5:\n\t\t\t\tvar gs = model.b;\n\t\t\t\tvar newTiles = author$project$Main$moveUp(gs.a);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{a: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{b: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 6:\n\t\t\t\tvar gs = model.b;\n\t\t\t\tvar newTiles = author$project$Main$moveDown(gs.a);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{a: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{b: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 8:\n\t\t\t\tvar gs = model.b;\n\t\t\t\tvar newTiles = author$project$Main$moveLeft(gs.a);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{a: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{b: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 7:\n\t\t\t\tvar gs = model.b;\n\t\t\t\tvar newTiles = author$project$Main$moveRight(gs.a);\n\t\t\t\tvar newGs = _Utils_update(\n\t\t\t\t\tgs,\n\t\t\t\t\t{a: newTiles});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{b: newGs}),\n\t\t\t\t\tauthor$project$Main$newTileLaterIfTilesChanged(newTiles));\n\t\t\tcase 9:\n\t\t\t\tvar urlRequest = msg.a;\n\t\t\t\tif (!urlRequest.$) {\n\t\t\t\t\tvar url = urlRequest.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\t\tmodel.af,\n\t\t\t\t\t\t\telm$url$Url$toString(url)));\n\t\t\t\t} else {\n\t\t\t\t\tvar href = urlRequest.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\telm$browser$Browser$Navigation$load(href));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar url = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{ak: url}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar author$project$Main$NewGame = {$: 1};\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$p = _VirtualDom_node('p');\nvar elm$html$Html$strong = _VirtualDom_node('strong');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$Main$aboveGame = A2(\n\telm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('above-game')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('game-intro')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Join the numbers and get to the '),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$strong,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('2048 tile!')\n\t\t\t\t\t\t]))\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\telm$html$Html$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('restart-button'),\n\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$NewGame)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('New Game')\n\t\t\t\t]))\n\t\t]));\nvar elm$html$Html$hr = _VirtualDom_node('hr');\nvar author$project$Main$divider = A2(elm$html$Html$hr, _List_Nil, _List_Nil);\nvar author$project$Main$gameExplanation = A2(\n\telm$html$Html$p,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('game-explanation')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('important')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('How to play: ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('Use your '),\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('arrow keys')\n\t\t\t\t])),\n\t\t\telm$html$Html$text(' to move the tiles. When two tiles with the same number touch, they '),\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('merge into one!')\n\t\t\t\t]))\n\t\t]));\nvar elm$html$Html$a = _VirtualDom_node('a');\nvar elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\telm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar elm$html$Html$Attributes$target = elm$html$Html$Attributes$stringProperty('target');\nvar author$project$Main$gameFooter = A2(\n\telm$html$Html$p,\n\t_List_Nil,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$text('Original 2048 created by '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('http://gabrielecirulli.com'),\n\t\t\t\t\telm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Gabriele Cirulli. ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('Based on '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://itunes.apple.com/us/app/1024!/id823499224'),\n\t\t\t\t\telm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('1024 by Veewo Studio ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('and conceptually similar to '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('http://asherv.com/threes/'),\n\t\t\t\t\telm$html$Html$Attributes$target('_blank')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Threes by Asher Vollmer.')\n\t\t\t\t]))\n\t\t]));\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar author$project$Main$gameHeader = function (gs) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('heading')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$h1,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('title')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Elm 2048')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('scores-container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('score-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(gs.D))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('best-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\telm$core$String$fromInt(gs.F))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$Main$KeepGoing = {$: 4};\nvar author$project$Main$gameStatusClassStr = function (gs) {\n\tvar _n0 = gs.s;\n\tswitch (_n0) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 3:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn ' game-over ';\n\t\tdefault:\n\t\t\treturn ' game-won';\n\t}\n};\nvar author$project$Main$gameStatusMessage = function (gs) {\n\tvar _n0 = gs.s;\n\tswitch (_n0) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 3:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn 'Game Over';\n\t\tdefault:\n\t\t\treturn 'You Won';\n\t}\n};\nvar author$project$Main$gameMessage = function (gs) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class(\n\t\t\t\t'game-message' + author$project$Main$gameStatusClassStr(gs))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$p,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\tauthor$project$Main$gameStatusMessage(gs))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('lower')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('keep-playing-button'),\n\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$KeepGoing)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text('Keep going')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('retry-button'),\n\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$NewGame)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text('Try again')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$Main$gameNotes = A2(\n\telm$html$Html$p,\n\t_List_Nil,\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$strong,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('important')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Note: ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('This is not the official version of 2048! It is an '),\n\t\t\telm$html$Html$text('implementation of Gabriele Cirulli\\'s '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://github.com/gabrielecirulli/2048')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('2048 game ')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('written in '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://elm-lang.org/')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Elm')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('. You can find the code for this Elm implementation here: '),\n\t\t\tA2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$href('https://github.com/stepheneb/elm-2048')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('github.com/stepheneb/elm-2048')\n\t\t\t\t])),\n\t\t\telm$html$Html$text('.')\n\t\t]));\nvar author$project$Main$gridRow = A2(\n\telm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('grid-row')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil),\n\t\t\tA2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class('grid-cell')\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]));\nvar author$project$Main$gridContainer = A2(\n\telm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Attributes$class('grid-container')\n\t\t]),\n\t_List_fromArray(\n\t\t[author$project$Main$gridRow, author$project$Main$gridRow, author$project$Main$gridRow, author$project$Main$gridRow]));\nvar author$project$Main$mergedTileClassStr = function (t) {\n\tvar _n0 = t.t;\n\tif (_n0) {\n\t\treturn ' tile-merged ';\n\t} else {\n\t\treturn '';\n\t}\n};\nvar author$project$Main$newTileClassStr = function (t) {\n\tvar _n0 = t._;\n\tif (_n0) {\n\t\treturn ' tile-new ';\n\t} else {\n\t\treturn '';\n\t}\n};\nvar author$project$Main$tileClassStr = function (t) {\n\tvar classStr = A2(\n\t\telm$core$String$join,\n\t\t' ',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t'tile',\n\t\t\t\t'tile-' + elm$core$String$fromInt(t.k),\n\t\t\t\t'tile-position-' + (elm$core$String$fromInt(t.h) + ('-' + elm$core$String$fromInt(t.i)))\n\t\t\t]));\n\treturn _Utils_ap(\n\t\tclassStr,\n\t\t_Utils_ap(\n\t\t\tauthor$project$Main$newTileClassStr(t),\n\t\t\tauthor$project$Main$mergedTileClassStr(t)));\n};\nvar author$project$Main$singleTile = function (t) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class(\n\t\t\t\tauthor$project$Main$tileClassStr(t))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('tile-inner')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\telm$core$String$fromInt(t.k))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$virtual_dom$VirtualDom$lazy = _VirtualDom_lazy;\nvar elm$html$Html$Lazy$lazy = elm$virtual_dom$VirtualDom$lazy;\nvar author$project$Main$singleKeyedTile = function (t) {\n\treturn _Utils_Tuple2(\n\t\telm$core$String$fromInt(t.P),\n\t\tA2(elm$html$Html$Lazy$lazy, author$project$Main$singleTile, t));\n};\nvar author$project$Main$listOfTiles = function (tiles) {\n\treturn A2(elm$core$List$map, author$project$Main$singleKeyedTile, tiles);\n};\nvar elm$virtual_dom$VirtualDom$keyedNode = function (tag) {\n\treturn _VirtualDom_keyedNode(\n\t\t_VirtualDom_noScript(tag));\n};\nvar elm$html$Html$Keyed$node = elm$virtual_dom$VirtualDom$keyedNode;\nvar author$project$Main$tileContainer = function (tiles) {\n\treturn A3(\n\t\telm$html$Html$Keyed$node,\n\t\t'div',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('tile-container')\n\t\t\t]),\n\t\tauthor$project$Main$listOfTiles(tiles));\n};\nvar author$project$Main$view = function (model) {\n\treturn {\n\t\taN: _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tauthor$project$Main$gameHeader(model.b),\n\t\t\t\t\t\tauthor$project$Main$aboveGame,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('game-container')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tauthor$project$Main$gameMessage(model.b),\n\t\t\t\t\t\t\t\tauthor$project$Main$gridContainer,\n\t\t\t\t\t\t\t\tauthor$project$Main$tileContainer(model.b.a)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tauthor$project$Main$gameExplanation,\n\t\t\t\t\t\tauthor$project$Main$divider,\n\t\t\t\t\t\tauthor$project$Main$gameNotes,\n\t\t\t\t\t\tauthor$project$Main$divider,\n\t\t\t\t\t\tauthor$project$Main$gameFooter\n\t\t\t\t\t]))\n\t\t\t]),\n\t\ta2: 'Elm 2048'\n\t};\n};\nvar elm$browser$Browser$application = _Browser_application;\nvar elm$json$Json$Decode$value = _Json_decodeValue;\nvar author$project$Main$main = elm$browser$Browser$application(\n\t{aW: author$project$Main$init, aZ: author$project$Main$UrlChanged, a_: author$project$Main$LinkClicked, a1: author$project$Main$subscriptions, a3: author$project$Main$update, a4: author$project$Main$view});\n_Platform_export({'Main':{'init':author$project$Main$main(elm$json$Json$Decode$value)(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\n//  localStorage\nconst storageKey = \"elm2048\";\n\nconst getItem = () => JSON.parse(localStorage.getItem(storageKey));\n\nconst setItem = (data) => localStorage.setItem(storageKey, JSON.stringify(data));\n\nconst gameState = getItem();\n\nvar app = Elm.Main.init({\n  node: document.getElementById('root'),\n  flags: gameState\n});\n\napp.ports.cacheData.subscribe(function(data) {\n  setItem(data);\n});\n\nregisterServiceWorker();\n\nwindow.addEventListener(\"keydown\", event => {\n  if(event.key.includes(\"Arrow\")){\n    event.preventDefault()\n  }\n})\n"],"sourceRoot":""}